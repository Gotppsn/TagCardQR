@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
<!DOCTYPE html>
<html lang="en">
<head>
    @inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
    @{
        var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    }
    <meta name="RequestVerificationToken" content="@requestToken">
    <meta name="csrf-token" content="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TagCardQR Manager</title>
    <link rel="stylesheet" href="~/css/tailwind.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap">
    <style>
        :root {
            --primary-color: #3b82f6;
            --primary-dark: #2563eb;
            --secondary-color: #10b981;
            --dark-color: #1f2937;
            --light-color: #f9fafb;
        }
        
        .fade-in {
            animation: fadeIn 0.4s ease-in-out;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .slide-in-right {
            animation: slideInRight 0.3s ease-out;
        }
        
        @@keyframes slideInRight {
            from { transform: translateX(20px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        .nav-item {
            @@apply px-4 py-2 rounded-lg text-gray-600 hover:text-blue-600 hover:bg-blue-50 transition-all duration-200 flex items-center;
        }
        
        .nav-item.active {
            @@apply bg-blue-50 text-blue-600 font-medium;
        }
        
        .brand-gradient {
            background: linear-gradient(135deg, #3b82f6 0%, #10b981 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .btn-primary {
            @@apply px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-sm hover:shadow transition-all duration-200 flex items-center justify-center gap-2;
        }
        
        .btn-secondary {
            @@apply px-4 py-2 bg-white hover:bg-gray-50 text-gray-700 border border-gray-200 rounded-lg shadow-sm hover:shadow transition-all duration-200 flex items-center justify-center gap-2;
        }
        
        /* Glass effect for cards */
        .glass-card {
            @@apply bg-white bg-opacity-70 backdrop-blur-sm border border-gray-100 shadow-lg rounded-xl;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen flex flex-col font-inter">
<header class="bg-white border-b border-gray-100 py-3 sticky top-0 z-10 shadow-sm">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center">
            <a href="/" class="flex items-center gap-2">
                <div class="w-10 h-10 rounded-lg bg-gradient-to-r from-blue-500 to-primary-500 text-white flex items-center justify-center shadow-sm">
                    <i class="fas fa-box-open text-xl"></i>
                </div>
                <span class="text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-primary-500">TagCardQR Manager</span>
            </a>
            
            <nav class="hidden md:flex items-center space-x-2">
                <a asp-controller="Card" asp-action="Index" class="px-3 py-2 text-gray-600 hover:text-blue-600 flex items-center">
                    <i class="fas fa-layer-group mr-2"></i> All Products
                </a>
                <a asp-controller="Card" asp-action="Create" class="px-3 py-2 text-gray-600 hover:text-blue-600 flex items-center">
                    <i class="fas fa-plus-circle mr-2"></i> New Product
                </a>
                <a asp-controller="Card" asp-action="PrintAll" class="px-3 py-2 text-gray-600 hover:text-blue-600 flex items-center">
                    <i class="fas fa-print mr-2"></i> Print All
                </a>
                @if (User.Identity.IsAuthenticated)
                {
                    <a asp-controller="Card" asp-action="ScanResult" class="px-3 py-2 text-gray-600 hover:text-blue-600 flex items-center">
                        <i class="fas fa-qrcode mr-2"></i> Scan Results
                    </a>
                    
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="RoleManagement" asp-action="Index" class="px-3 py-2 text-gray-600 hover:text-blue-600 flex items-center">
                            <i class="fas fa-user-shield mr-2"></i> Roles
                        </a>
                    }
                }
                @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                {
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "DepartmentAccess" ? "active" : "")"
                        asp-controller="DepartmentAccess" asp-action="Index">
                            <i class="fas fa-users mr-2"></i> Department Access
                        </a>
                }
                <!-- Using our custom _LoginPartial with dropdown menu -->
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="flex items-center relative" id="userDropdownContainer">
                        <button id="userDropdownButton" class="flex items-center space-x-2 text-sm text-gray-700 hover:text-gray-900">
                            <div class="w-8 h-8 rounded-full bg-primary-500 text-white flex items-center justify-center">
                                @{
                                    var username = User.Identity?.Name;
                                    var firstLetter = !string.IsNullOrEmpty(username) ? username.Substring(0, 1).ToUpper() : "U";
                                }
                                <span>@firstLetter</span>
                            </div>
                            <span class="hidden md:inline-block">@username</span>
                            <i class="fas fa-chevron-down text-xs ml-1"></i>
                        </button>
                        
                        <div id="userDropdownMenu" class="hidden absolute right-0 top-full mt-2 w-48 bg-white rounded-lg shadow-lg py-1 z-50">
                            <a asp-controller="UserProfile" asp-action="Index" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                <i class="fas fa-user mr-2"></i> Profile
                            </a>
                            
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-controller="RoleManagement" asp-action="Users" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    <i class="fas fa-users-cog mr-2"></i> Manage Users
                                </a>
                            }
                            
                            <div class="border-t border-gray-100 my-1"></div>
                            
                            <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                                <button type="submit" class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                    <i class="fas fa-sign-out-alt mr-2"></i> Logout
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <a asp-controller="Account" asp-action="Login" class="text-sm font-medium text-primary-600 hover:text-primary-800">
                        <i class="fas fa-sign-in-alt mr-1"></i> Login
                    </a>
                }
            </nav>
            
            <button class="md:hidden w-10 h-10 rounded-lg bg-gray-100 hover:bg-gray-200 flex items-center justify-center text-gray-600" id="mobile-menu-button">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </div>
</header>
<div class="mobile-menu hidden md:hidden bg-white border-b border-gray-200 shadow-md">
    <div class="container mx-auto px-4 py-3">
        <nav class="flex flex-col space-y-2 py-2">
            <a asp-controller="Card" asp-action="Index" class="nav-item">
                <i class="fas fa-layer-group mr-2 w-5 text-center"></i> All Products
            </a>
            <a asp-controller="Card" asp-action="Create" class="nav-item">
                <i class="fas fa-plus-circle mr-2 w-5 text-center"></i> New Product
            </a>
            <a asp-controller="Card" asp-action="PrintAll" class="nav-item">
                <i class="fas fa-print mr-2 w-5 text-center"></i> Print All
            </a>
            @if (User.Identity.IsAuthenticated)
            {
                <a asp-controller="Card" asp-action="ScanResult" class="nav-item">
                    <i class="fas fa-qrcode mr-2 w-5 text-center"></i> Scan Results
                </a>
                
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="RoleManagement" asp-action="Index" class="nav-item">
                        <i class="fas fa-user-shield mr-2 w-5 text-center"></i> Role Management
                    </a>
                    <a asp-controller="RoleManagement" asp-action="Users" class="nav-item">
                        <i class="fas fa-users-cog mr-2 w-5 text-center"></i> User Roles
                    </a>
                }
                
                <a asp-controller="UserProfile" asp-action="Index" class="nav-item">
                    <i class="fas fa-user mr-2 w-5 text-center"></i> Profile
                </a>
                <form asp-controller="Account" asp-action="Logout" method="post">
                    <button type="submit" class="nav-item text-red-600 hover:bg-red-50 hover:text-red-700 w-full text-left">
                        <i class="fas fa-sign-out-alt mr-2 w-5 text-center"></i> Logout
                    </button>
                </form>
            }
            else
            {
                <a asp-controller="Account" asp-action="Login" class="nav-item text-blue-600 hover:bg-blue-50">
                    <i class="fas fa-sign-in-alt mr-2 w-5 text-center"></i> Login
                </a>
            }
            <div class="pt-2 mt-2 border-t border-gray-100">
                <a asp-controller="Card" asp-action="Create" class="w-full bg-gradient-to-r from-blue-500 to-primary-500 hover:from-blue-600 hover:to-primary-600 text-white px-4 py-2 rounded-lg shadow-sm flex items-center justify-center">
                    <i class="fas fa-plus mr-2"></i> Add New Product
                </a>
            </div>
        </nav>
    </div>
</div>

    <main class="flex-grow container mx-auto px-4 py-8 md:py-10 fade-in">
        @RenderBody()
    </main>

    <footer class="bg-white border-t border-gray-100 py-6 mt-auto">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="flex items-center mb-4 md:mb-0">
                    <span class="font-semibold text-gray-700">ThaiParker TagCardQR Manager</span>
                    <span class="mx-2 text-gray-300">|</span>
                    <span class="text-gray-500 text-sm">&copy; @DateTime.Now.Year Thai Parkerizing Co., Ltd</span>
                </div>
                <div class="flex space-x-4">
                    <span class="text-gray-500">
                        <i class="fas fa-question-circle mr-1"></i> Need help? Contact IT Support
                    </span>
                </div>
            </div>
        </div>
    </footer>

    <!-- Notification toast -->
    <div id="notification-toast" class="fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-4 transform translate-y-20 opacity-0 transition-all duration-300 z-50 max-w-sm border border-gray-100">
        <div class="flex items-center">
            <div id="notification-icon" class="flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full mr-3">
                <i id="notification-icon-symbol" class="fas fa-check"></i>
            </div>
            <div class="flex-grow">
                <p id="notification-message" class="font-medium"></p>
            </div>
            <button onclick="hideNotification()" class="ml-2 text-gray-400 hover:text-gray-600 h-8 w-8 rounded-full hover:bg-gray-100 flex items-center justify-center transition-colors">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        // Mobile menu toggle
        document.addEventListener('DOMContentLoaded', function() {
            const mobileMenuButton = document.getElementById('mobile-menu-button');
            if (mobileMenuButton) {
                mobileMenuButton.addEventListener('click', function() {
                    const mobileMenu = document.querySelector('.mobile-menu');
                    mobileMenu.classList.toggle('hidden');
                    if (!mobileMenu.classList.contains('hidden')) {
                        mobileMenu.classList.add('slide-in-right');
                        setTimeout(() => {
                            mobileMenu.classList.remove('slide-in-right');
                        }, 300);
                    }
                });
            }
            
            // Set active nav item
            const currentPath = window.location.pathname;
            const navItems = document.querySelectorAll('.nav-item, nav a');
            
            navItems.forEach(item => {
                const href = item.getAttribute('href');
                if (href && currentPath.includes(href) && href !== '/') {
                    item.classList.add('active');
                    if(item.classList.contains('text-gray-600')) {
                        item.classList.remove('text-gray-600');
                        item.classList.add('text-blue-600');
                    }
                }
            });
            
            // Dropdown menu toggle functionality
            const dropdownButton = document.getElementById('userDropdownButton');
            const dropdownMenu = document.getElementById('userDropdownMenu');
            const dropdownContainer = document.getElementById('userDropdownContainer');
            
            if (dropdownButton && dropdownMenu && dropdownContainer) {
                // Toggle dropdown when button is clicked
                dropdownButton.addEventListener('click', function(e) {
                    e.stopPropagation();
                    dropdownMenu.classList.toggle('hidden');
                });
                
                // Close dropdown when clicking outside
                document.addEventListener('click', function(e) {
                    if (!dropdownContainer.contains(e.target)) {
                        dropdownMenu.classList.add('hidden');
                    }
                });
            }
        });
        
        // Notification system
        function showNotification(message, type = 'success') {
            const toast = document.getElementById('notification-toast');
            const icon = document.getElementById('notification-icon');
            const iconSymbol = document.getElementById('notification-icon-symbol');
            const messageEl = document.getElementById('notification-message');
            
            // Set message
            messageEl.textContent = message;
            
            // Set type
            if (type === 'success') {
                icon.className = 'flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full mr-3 bg-green-100 text-green-500';
                iconSymbol.className = 'fas fa-check';
            } else if (type === 'error') {
                icon.className = 'flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full mr-3 bg-red-100 text-red-500';
                iconSymbol.className = 'fas fa-times';
            } else if (type === 'info') {
                icon.className = 'flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full mr-3 bg-blue-100 text-blue-500';
                iconSymbol.className = 'fas fa-info';
            }
            
            // Show toast
            toast.classList.remove('translate-y-20', 'opacity-0');
            toast.classList.add('translate-y-0', 'opacity-100');
            
            // Hide after 3 seconds
            setTimeout(hideNotification, 3000);
        }
        
        function hideNotification() {
            const toast = document.getElementById('notification-toast');
            toast.classList.remove('translate-y-0', 'opacity-100');
            toast.classList.add('translate-y-20', 'opacity-0');
        }
        
        // Handle success/error messages from TempData
        document.addEventListener('DOMContentLoaded', function() {
            // Check for success message in TempData
            const successMessage = '@TempData["SuccessMessage"]';
            if (successMessage && successMessage !== '') {
                showNotification(successMessage, 'success');
            }
            
            // Check for error message in TempData
            const errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage && errorMessage !== '') {
                showNotification(errorMessage, 'error');
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)

    @if (TempData.ContainsKey("LdapDebugData"))
{
    <script>
        (function() {
            try {
                console.log("%c===== LDAP USER DATA =====", "background:#0284c7;color:white;padding:4px 8px;font-weight:bold;");
                const ldapData = @Html.Raw(TempData["LdapDebugData"]);
                
                // Log all data as table and text
                console.table(ldapData);
                
                // Log individual entries for easier inspection
                Object.entries(ldapData).forEach(([key, value]) => {
                    console.log(`${key}: ${value}`);
                });
                
                // Create a hidden data element for inspection
                const dataElement = document.createElement('div');
                dataElement.id = 'ldap-debug-data';
                dataElement.style.display = 'none';
                dataElement.setAttribute('data-content', JSON.stringify(ldapData));
                document.body.appendChild(dataElement);
                
                // Add keyboard shortcut to toggle debug panel
                document.addEventListener('keydown', function(e) {
                    // Alt+D to toggle debug panel
                    if (e.altKey && e.key === 'd') {
                        let panel = document.getElementById('ldap-debug-panel');
                        if (panel) {
                            panel.remove();
                        } else {
                            showDebugPanel(ldapData);
                        }
                    }
                });
                
                function showDebugPanel(data) {
                    const panel = document.createElement('div');
                    panel.id = 'ldap-debug-panel';
                    panel.style = 'position:fixed;top:10px;right:10px;width:600px;max-height:80vh;overflow:auto;z-index:9999;background:white;border:1px solid #0284c7;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.15);padding:16px;';
                    
                    panel.innerHTML = `
                        <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:10px;">
                            <h3 style="margin:0;color:#0284c7;font-size:16px;">LDAP User Data</h3>
                            <button id="close-ldap-panel" style="background:none;border:none;cursor:pointer;font-size:16px;">×</button>
                        </div>
                        <div style="margin-bottom:10px;">
                            <button id="copy-ldap-data" style="background:#0284c7;color:white;border:none;padding:4px 8px;border-radius:4px;cursor:pointer;margin-right:8px;">Copy Data</button>
                            <button id="download-ldap-data" style="background:#16a34a;color:white;border:none;padding:4px 8px;border-radius:4px;cursor:pointer;">Download JSON</button>
                        </div>
                        <div style="background:#f8fafc;border:1px solid #e2e8f0;border-radius:4px;padding:8px;font-family:monospace;font-size:12px;white-space:pre-wrap;max-height:60vh;overflow:auto;">
                            ${JSON.stringify(data, null, 2)}
                        </div>
                    `;
                    
                    document.body.appendChild(panel);
                    
                    document.getElementById('close-ldap-panel').addEventListener('click', () => panel.remove());
                    
                    document.getElementById('copy-ldap-data').addEventListener('click', function() {
                        navigator.clipboard.writeText(JSON.stringify(data, null, 2));
                        this.textContent = 'Copied!';
                        setTimeout(() => this.textContent = 'Copy Data', 2000);
                    });
                    
                    document.getElementById('download-ldap-data').addEventListener('click', function() {
                        const dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(data, null, 2));
                        const downloadAnchor = document.createElement('a');
                        downloadAnchor.setAttribute("href", dataStr);
                        downloadAnchor.setAttribute("download", "ldap_attributes.json");
                        document.body.appendChild(downloadAnchor);
                        downloadAnchor.click();
                        document.body.removeChild(downloadAnchor);
                    });
                }
                
                console.log("%c===== Press Alt+D to show LDAP Debug Panel =====", "background:#0284c7;color:white;padding:4px 8px;font-weight:bold;");
            } catch (err) {
                console.error("Error processing LDAP debug data:", err);
            }
        })();
    </script>
}
</body>
</html>