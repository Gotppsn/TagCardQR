@model IEnumerable<CardTagManager.Models.UserProfile>
@{
    ViewData["Title"] = "User Role Assignments";
    var roles = ViewBag.Roles as IEnumerable<CardTagManager.Models.Role>;
}

<div class="bg-white rounded-lg shadow-sm border border-gray-100 p-6">
    <div class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-2xl font-bold text-gray-800">User Role Assignments</h1>
            <p class="text-gray-600 mt-1">Manage which roles are assigned to each user</p>
        </div>
        <div class="flex space-x-3">
            <a asp-action="Index" class="btn-secondary">
                <i class="fas fa-arrow-left mr-2"></i> Back to Roles
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-lg mb-6 flex items-center">
            <i class="fas fa-check-circle mr-2 text-green-500"></i>
            <span>@TempData["SuccessMessage"]</span>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-6 flex items-center">
            <i class="fas fa-exclamation-circle mr-2 text-red-500"></i>
            <span>@TempData["ErrorMessage"]</span>
        </div>
    }

    <!-- Search and filter -->
    <div class="mb-6">
        <div class="flex flex-col md:flex-row gap-4">
            <div class="relative flex-grow">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-gray-400"></i>
                </div>
                <input id="search-users" type="text" class="pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-500 focus:border-primary-500" placeholder="Search users...">
            </div>
            <div class="flex items-center space-x-2">
                <span class="text-sm text-gray-600">Filter by role:</span>
                <select id="role-filter" class="form-input py-2">
                    <option value="all">All Roles</option>
                    @foreach (var role in roles)
                    {
                        <option value="@role.Name">@role.Name</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="overflow-x-auto bg-white rounded-lg border border-gray-100">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        User
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Department
                    </th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Current Roles
                    </th>
                    <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                @foreach (var user in Model)
                {
                    var userRoles = ViewData[$"UserRoles_{user.Id}"] as IEnumerable<CardTagManager.Models.Role>;
                    
                    <tr class="hover:bg-gray-50 user-row" data-username="@user.Username" data-roles="@(userRoles != null ? string.Join(",", userRoles.Select(r => r.Name)) : "")">
                        <td class="px-6 py-4">
                            <div class="flex items-center">
                                <div class="h-10 w-10 flex-shrink-0 rounded-full bg-primary-500 text-white flex items-center justify-center">
                                    <span>@(user.Username.Substring(0, 1).ToUpper())</span>
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900">@user.Username</div>
                                    <div class="text-sm text-gray-500">
                                        @(!string.IsNullOrEmpty(user.Detail_EN_FirstName) ? $"{user.Detail_EN_FirstName} {user.Detail_EN_LastName}" : "")
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <div class="text-sm text-gray-900">@user.Department_Name</div>
                            <div class="text-sm text-gray-500">@user.Plant_Name</div>
                        </td>
                        <td class="px-6 py-4">
                            <div class="flex flex-wrap gap-1">
                            @if (userRoles != null && userRoles.Any())
                            {
                                foreach (var role in userRoles)
                                {
                                    string badgeClass = "bg-gray-100 text-gray-800";
                                    string iconClass = "fas fa-user";
                                    
                                    if (role.Name == "Admin")
                                    {
                                        badgeClass = "bg-red-100 text-red-800";
                                        iconClass = "fas fa-user-shield";
                                    }
                                    else if (role.Name == "Manager")
                                    {
                                        badgeClass = "bg-green-100 text-green-800";
                                        iconClass = "fas fa-user-tie";
                                    }
                                    
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @badgeClass">
                                        <i class="@iconClass mr-1 text-xs"></i>
                                        @role.Name
                                    </span>
                                }
                            }
                            else
                            {
                                <span class="text-sm text-gray-500">No roles assigned</span>
                            }
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <a asp-action="EditUserRoles" asp-route-id="@user.Id" class="text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 px-3 py-1 rounded-md">
                                <i class="fas fa-user-cog mr-1"></i> Edit Roles
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('search-users');
            const roleFilter = document.getElementById('role-filter');
            const userRows = document.querySelectorAll('.user-row');
            
            // Search functionality
            searchInput.addEventListener('input', filterUsers);
            roleFilter.addEventListener('change', filterUsers);
            
            function filterUsers() {
                const searchTerm = searchInput.value.toLowerCase();
                const roleFilterValue = roleFilter.value.toLowerCase();
                
                userRows.forEach(row => {
                    const username = row.getAttribute('data-username').toLowerCase();
                    const fullName = row.querySelector('.ml-4').textContent.toLowerCase();
                    const userRoles = row.getAttribute('data-roles').toLowerCase();
                    
                    const matchesSearch = username.includes(searchTerm) || fullName.includes(searchTerm);
                    const matchesRole = roleFilterValue === 'all' || userRoles.includes(roleFilterValue);
                    
                    if (matchesSearch && matchesRole) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }
        });
    </script>
}