@model IEnumerable<CardTagManager.Models.Card>

@{
    ViewData["Title"] = "Card Library";
}

<div class="mb-6">
    <h1 class="text-2xl font-bold text-gray-800 mb-4">Your Card Library</h1>
    
    <div class="flex flex-col md:flex-row md:items-center justify-between gap-4 mb-6">
        <div class="search-container w-full md:w-auto md:min-w-72">
            <i class="fas fa-search search-icon"></i>
            <input type="text" id="card-search" placeholder="Search cards..." class="search-input" />
        </div>
        
        <div class="flex items-center gap-3">
            <div class="inline-flex rounded-md shadow-sm">
                <button id="all-cards-btn" class="filter-button active">
                    <i class="fas fa-layer-group mr-2"></i> All Cards
                </button>
                <button id="recently-updated-btn" class="filter-button">
                    <i class="fas fa-clock mr-2"></i> Recently Updated
                </button>
            </div>
            
            <a asp-action="Create" class="btn-primary">
                <i class="fas fa-plus"></i> Add Card
            </a>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-md shadow-sm fade-in">
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="fas fa-exclamation-triangle text-yellow-400"></i>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">No cards found</h3>
                <div class="mt-2 text-sm text-yellow-700">
                    <p>Get started by creating your first business card.</p>
                </div>
                <div class="mt-4">
                    <a asp-action="Create" class="btn-primary btn-sm">
                        <i class="fas fa-plus"></i> Create First Card
                    </a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div id="cards-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 fade-in">
        @foreach (var card in Model)
        {
            <div class="card-item group" data-updated="@card.UpdatedAt.ToString("yyyy-MM-dd")">
                <div class="p-4 border-b border-gray-100">
                    <h3 class="text-lg font-semibold text-primary-700 group-hover:text-primary-800 transition-colors">@card.Name</h3>
                    <p class="text-sm text-gray-600">@card.Title</p>
                    <p class="font-medium mb-3">@card.Company</p>
                    
                    <div class="space-y-1.5 text-sm">
                        <p class="flex items-center text-gray-700">
                            <i class="fas fa-envelope mr-2 text-primary-500 w-4 text-center"></i>@card.Email
                        </p>
                        <p class="flex items-center text-gray-700">
                            <i class="fas fa-phone mr-2 text-primary-500 w-4 text-center"></i>@card.Phone
                        </p>
                        @if (!string.IsNullOrEmpty(card.Address))
                        {
                            <p class="flex items-center text-gray-700">
                                <i class="fas fa-map-marker-alt mr-2 text-primary-500 w-4 text-center"></i>
                                <span class="truncate">@card.Address</span>
                            </p>
                        }
                        @if (!string.IsNullOrEmpty(card.Website))
                        {
                            <p class="flex items-center text-gray-700">
                                <i class="fas fa-globe mr-2 text-primary-500 w-4 text-center"></i>
                                <span class="truncate">@card.Website</span>
                            </p>
                        }
                    </div>
                </div>
                
                <div class="bg-gray-50 px-4 py-3 flex items-center justify-between border-t border-gray-100">
                    <span class="text-xs text-gray-500">
                        <i class="far fa-clock mr-1"></i> Updated @((DateTime.Now - card.UpdatedAt).TotalDays < 1 ? "today" : card.UpdatedAt.ToString("MMM d, yyyy"))
                    </span>
                    
                    <div class="flex items-center space-x-1">
                        <a asp-action="Details" asp-route-id="@card.Id" class="action-button" title="View Details">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a asp-action="Edit" asp-route-id="@card.Id" class="action-button" title="Edit Card">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a asp-action="Print" asp-route-id="@card.Id" class="action-button" title="Print Card">
                            <i class="fas fa-print"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@card.Id" class="action-button delete" title="Delete Card">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Card search functionality
        const searchInput = document.getElementById('card-search');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase().trim();
                const cards = document.querySelectorAll('.card-item');
                
                cards.forEach(card => {
                    const cardText = card.textContent.toLowerCase();
                    if (searchTerm === '' || cardText.includes(searchTerm)) {
                        card.style.display = '';
                        // Optional: add a subtle animation for appearing cards
                        card.classList.add('fade-in');
                    } else {
                        card.style.display = 'none';
                        card.classList.remove('fade-in');
                    }
                });
                
                // Check if we have visible cards
                const visibleCards = document.querySelectorAll('.card-item[style=""]');
                const noResultsElem = document.getElementById('no-search-results');
                
                if (visibleCards.length === 0 && searchTerm !== '' && !noResultsElem) {
                    const container = document.getElementById('cards-container');
                    const noResults = document.createElement('div');
                    noResults.id = 'no-search-results';
                    noResults.className = 'col-span-full py-8 text-center text-gray-500 fade-in';
                    noResults.innerHTML = `
                        <i class="fas fa-search text-3xl mb-2 text-gray-300"></i>
                        <p>No cards found matching "${searchTerm}"</p>
                    `;
                    container.appendChild(noResults);
                } else if ((visibleCards.length > 0 || searchTerm === '') && noResultsElem) {
                    noResultsElem.remove();
                }
            });
        }
        
        // Filter buttons
        const allCardsBtn = document.getElementById('all-cards-btn');
        const recentlyUpdatedBtn = document.getElementById('recently-updated-btn');
        
        if (allCardsBtn && recentlyUpdatedBtn) {
            allCardsBtn.addEventListener('click', function() {
                this.classList.add('active');
                recentlyUpdatedBtn.classList.remove('active');
                
                const cards = document.querySelectorAll('.card-item');
                cards.forEach(card => {
                    card.style.display = '';
                    card.classList.add('fade-in');
                });
            });
            
            recentlyUpdatedBtn.addEventListener('click', function() {
                this.classList.add('active');
                allCardsBtn.classList.remove('active');
                
                const cards = document.querySelectorAll('.card-item');
                const today = new Date();
                const oneWeekAgo = new Date();
                oneWeekAgo.setDate(today.getDate() - 7);
                
                let foundRecent = false;
                
                cards.forEach(card => {
                    const updatedDate = new Date(card.getAttribute('data-updated'));
                    
                    if (updatedDate >= oneWeekAgo) {
                        card.style.display = '';
                        card.classList.add('fade-in');
                        foundRecent = true;
                    } else {
                        card.style.display = 'none';
                        card.classList.remove('fade-in');
                    }
                });
                
                // Show message if no recent cards
                const noRecentElem = document.getElementById('no-recent-cards');
                
                if (!foundRecent && !noRecentElem) {
                    const container = document.getElementById('cards-container');
                    const noRecent = document.createElement('div');
                    noRecent.id = 'no-recent-cards';
                    noRecent.className = 'col-span-full py-8 text-center text-gray-500 fade-in';
                    noRecent.innerHTML = `
                        <i class="fas fa-clock text-3xl mb-2 text-gray-300"></i>
                        <p>No cards have been updated in the last 7 days</p>
                    `;
                    container.appendChild(noRecent);
                } else if (foundRecent && noRecentElem) {
                    noRecentElem.remove();
                }
            });
        }
        
        // Optional: Add click event to card-item for navigation
        const cardItems = document.querySelectorAll('.card-item');
        cardItems.forEach(card => {
            card.addEventListener('click', function(e) {
                // Only navigate if the click wasn't on an action button
                if (!e.target.closest('.action-button')) {
                    const viewLink = this.querySelector('a[asp-action="Details"]');
                    if (viewLink) {
                        window.location.href = viewLink.getAttribute('href');
                    }
                }
            });
        });
    });
</script>
}