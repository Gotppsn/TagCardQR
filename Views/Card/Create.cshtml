@model CardTagManager.Models.Card

@{
    ViewData["Title"] = "Create New Card";
}

<div class="mb-6">
    <a asp-action="Index" class="inline-flex items-center text-primary-600 hover:text-primary-700 transition-colors group">
        <i class="fas fa-arrow-left mr-2 group-hover:-translate-x-1 transition-transform"></i> Back to Library
    </a>
</div>

<div class="grid grid-cols-1 lg:grid-cols-5 gap-8 fade-in">
    <!-- Form Section (3 columns) -->
    <div class="lg:col-span-3">
        <div class="card">
            <div class="card-header">
                <h2 class="text-xl font-bold text-gray-800 flex items-center">
                    <i class="fas fa-plus-circle text-primary-500 mr-2"></i> Add New Product
                </h2>
                <p class="text-sm text-gray-500 mt-1">Fill in the details for your product tag</p>
            </div>
            
            <form asp-action="Create" method="post" id="product-form">
                <div class="card-body">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="space-y-4">
                            <div class="form-group">
                                <label asp-for="ProductName" class="form-label">Product Name</label>
                                <input asp-for="ProductName" class="form-input" required placeholder="RustShield Pro 5000" />
                                <span asp-validation-for="ProductName" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Category" class="form-label">Category</label>
                                <select asp-for="Category" class="form-input">
                                    <option value="Rust Coating Chemical">Rust Coating Chemical</option>
                                    <option value="Application Equipment">Application Equipment</option>
                                    <option value="Lab Equipment">Lab Equipment</option>
                                    <option value="Office Equipment">Office Equipment</option>
                                    <option value="Safety Equipment">Safety Equipment</option>
                                    <option value="Quality Control">Quality Control</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span asp-validation-for="Category" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Manufacturer" class="form-label">Manufacturer</label>
                                <input asp-for="Manufacturer" class="form-input" required placeholder="ChemTech Industries" />
                                <span asp-validation-for="Manufacturer" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="ModelNumber" class="form-label">Model Number</label>
                                <input asp-for="ModelNumber" class="form-input" required placeholder="RS-5000-X" />
                                <span asp-validation-for="ModelNumber" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="SerialNumber" class="form-label">Serial Number</label>
                                <input asp-for="SerialNumber" class="form-input" required placeholder="CT20250001" />
                                <span asp-validation-for="SerialNumber" class="form-error"></span>
                            </div>
                        </div>
                        
                        <div class="space-y-4">
                            <div class="form-group">
                                <label asp-for="Location" class="form-label">Location</label>
                                <input asp-for="Location" class="form-input" placeholder="Chemical Storage Room A" />
                                <span asp-validation-for="Location" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="MaintenanceInfo" class="form-label">Maintenance Information</label>
                                <textarea asp-for="MaintenanceInfo" class="form-input h-16" placeholder="Store at 10-15Â°C, away from direct sunlight"></textarea>
                                <span asp-validation-for="MaintenanceInfo" class="form-error"></span>
                            </div>
                            
                            <div class="grid grid-cols-3 gap-4">
                                <div class="form-group">
                                    <label asp-for="ManufactureDate" class="form-label">Manufacture Date</label>
                                    <input asp-for="ManufactureDate" type="date" class="form-input" required />
                                    <span asp-validation-for="ManufactureDate" class="form-error"></span>
                                </div>
                                
                                <div class="form-group">
                                    <label asp-for="PurchaseDate" class="form-label">Purchase Date</label>
                                    <input asp-for="PurchaseDate" type="date" class="form-input" required />
                                    <span asp-validation-for="PurchaseDate" class="form-error"></span>
                                </div>
                                
                                <div class="form-group">
                                    <label asp-for="WarrantyExpiration" class="form-label">Warranty Until</label>
                                    <input asp-for="WarrantyExpiration" type="date" class="form-input" required />
                                    <span asp-validation-for="WarrantyExpiration" class="form-error"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-6 pt-4 border-t border-gray-100">
                        <h3 class="font-medium text-gray-800 mb-3">Tag Appearance</h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div class="form-group">
                                <label asp-for="BackgroundColor" class="form-label">Background Color</label>
                                <div class="flex">
                                    <input asp-for="BackgroundColor" type="color" class="h-10 w-12 border border-gray-300 rounded-l cursor-pointer" />
                                    <input asp-for="BackgroundColor" type="text" class="form-input rounded-l-none flex-grow" />
                                </div>
                                <span asp-validation-for="BackgroundColor" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="TextColor" class="form-label">Text Color</label>
                                <div class="flex">
                                    <input asp-for="TextColor" type="color" class="h-10 w-12 border border-gray-300 rounded-l cursor-pointer" />
                                    <input asp-for="TextColor" type="text" class="form-input rounded-l-none flex-grow" />
                                </div>
                                <span asp-validation-for="TextColor" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="AccentColor" class="form-label">Accent Color</label>
                                <div class="flex">
                                    <input asp-for="AccentColor" type="color" class="h-10 w-12 border border-gray-300 rounded-l cursor-pointer" />
                                    <input asp-for="AccentColor" type="text" class="form-input rounded-l-none flex-grow" />
                                </div>
                                <span asp-validation-for="AccentColor" class="form-error"></span>
                            </div>
                        </div>
                        
                        <div class="mt-3 flex flex-wrap gap-2">
                            <p class="text-sm text-gray-500 w-full mb-1">Color Schemes:</p>
                            <button type="button" class="color-preset w-8 h-8 rounded-full shadow-sm border border-gray-200" 
                                    style="background-color: #ffffff; color: #000000; border: 2px solid #0284c7"
                                    data-bg="#ffffff" data-text="#000000" data-accent="#0284c7"></button>
                            <button type="button" class="color-preset w-8 h-8 rounded-full shadow-sm border border-gray-200" 
                                    style="background-color: #1e293b; color: #ffffff; border: 2px solid #38bdf8"
                                    data-bg="#1e293b" data-text="#ffffff" data-accent="#38bdf8"></button>
                            <button type="button" class="color-preset w-8 h-8 rounded-full shadow-sm border border-gray-200" 
                                    style="background-color: #f8fafc; color: #1e293b; border: 2px solid #f97316"
                                    data-bg="#f8fafc" data-text="#1e293b" data-accent="#f97316"></button>
                            <button type="button" class="color-preset w-8 h-8 rounded-full shadow-sm border border-gray-200" 
                                    style="background-color: #f0fdf4; color: #166534; border: 2px solid #16a34a"
                                    data-bg="#f0fdf4" data-text="#166534" data-accent="#16a34a"></button>
                            <button type="button" class="color-preset w-8 h-8 rounded-full shadow-sm border border-gray-200" 
                                    style="background-color: #eff6ff; color: #1e40af; border: 2px solid #3b82f6"
                                    data-bg="#eff6ff" data-text="#1e40af" data-accent="#3b82f6"></button>
                        </div>
                    </div>
                </div>
                
                <div class="card-footer flex justify-end">
                    <a asp-action="Index" class="btn-secondary mr-3">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                    <button type="submit" class="btn-primary">
                        <i class="fas fa-save"></i> Create Product
                    </button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Preview Section (2 columns) -->
    <div class="lg:col-span-2">
        <div class="sticky top-6">
            <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center">
                <i class="fas fa-eye text-primary-500 mr-2"></i> Tag Preview
            </h3>
            
            <div class="business-card" id="tag-preview" style="background-color: #ffffff; color: #000000">
                <div class="p-6 h-full flex flex-col">
                    <div class="mb-4">
                        <span id="preview-category" class="px-2 py-1 text-xs font-semibold rounded-full" style="background-color: #0284c7; color: #ffffff">
                            Product Category
                        </span>
                        <h3 id="preview-name" class="text-xl font-bold mt-2" style="color: #0284c7">Product Name</h3>
                        <p id="preview-manufacturer" class="text-md">Manufacturer</p>
                        <div class="flex items-center space-x-2 mt-1 text-sm">
                            <span class="font-semibold">Model:</span>
                            <span id="preview-model">MODEL-XXX</span>
                        </div>
                        <div class="flex items-center space-x-2 text-sm">
                            <span class="font-semibold">Serial:</span>
                            <span id="preview-serial">SN12345</span>
                        </div>
                    </div>
                    <div class="space-y-2 mt-auto text-sm">
                        <p class="flex items-center">
                            <i class="fas fa-map-marker-alt mr-3" style="color: #0284c7"></i>
                            <span class="font-medium">Location:</span>&nbsp;<span id="preview-location">Storage Location</span>
                        </p>
                        <p class="flex items-center">
                            <i class="fas fa-calendar-day mr-3" style="color: #0284c7"></i>
                            <span class="font-medium">Manufactured:</span>&nbsp;<span id="preview-mfgdate">Jan 1, 2025</span>
                        </p>
                        <p class="flex items-center">
                            <i class="fas fa-calendar-check mr-3" style="color: #0284c7"></i>
                            <span class="font-medium">Warranty Until:</span>&nbsp;<span id="preview-warranty">Jan 1, 2026</span>
                        </p>
                        <p class="flex items-center">
                            <i class="fas fa-tools mr-3" style="color: #0284c7"></i>
                            <span class="font-medium">Maintenance:</span>&nbsp;<span id="preview-maintenance">Maintenance information</span>
                        </p>
                    </div>
                </div>
            </div>
            
            <div class="mt-3 text-center">
                <button type="button" id="update-preview" class="btn-secondary btn-sm w-full">
                    <i class="fas fa-sync-alt"></i> Update Preview
                </button>
                <p class="text-xs text-gray-500 mt-2">Preview updates automatically as you type</p>
            </div>
            
            <div class="mt-6 bg-blue-50 border-l-4 border-blue-400 p-4 rounded">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="fas fa-info-circle text-blue-400"></i>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-blue-800">Tips for effective product tags</h3>
                        <ul class="mt-2 text-sm text-blue-700 list-disc list-inside">
                            <li>Use clear, descriptive product names</li>
                            <li>Keep maintenance information concise and specific</li>
                            <li>Choose contrasting colors for better readability</li>
                            <li>Ensure accurate model and serial numbers</li>
                            <li>Always include current location information</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input, select, textarea');
            const colorInputs = document.querySelectorAll('input[type="color"]');
            const previewButton = document.getElementById('update-preview');
            const presetButtons = document.querySelectorAll('.color-preset');
            
            // Initialize preview
            updateTagPreview();
            
            // Update preview on form input
            inputs.forEach(input => {
                input.addEventListener('input', updateTagPreview);
            });
            
            // Update text field when color picker changes
            colorInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const textInput = this.nextElementSibling;
                    if (textInput) {
                        textInput.value = this.value;
                    }
                    updateTagPreview();
                });
            });
            
            // Handle color presets
            presetButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const bg = this.getAttribute('data-bg');
                    const text = this.getAttribute('data-text');
                    const accent = this.getAttribute('data-accent');
                    
                    // Update form inputs
                    document.getElementById('BackgroundColor').value = bg;
                    document.querySelector('input[type="text"][id="BackgroundColor"]').value = bg;
                    
                    document.getElementById('TextColor').value = text;
                    document.querySelector('input[type="text"][id="TextColor"]').value = text;
                    
                    document.getElementById('AccentColor').value = accent;
                    document.querySelector('input[type="text"][id="AccentColor"]').value = accent;
                    
                    updateTagPreview();
                    
                    // Add highlight effect
                    this.classList.add('ring-4', 'ring-primary-200');
                    setTimeout(() => {
                        this.classList.remove('ring-4', 'ring-primary-200');
                    }, 500);
                });
            });
            
            // Force update preview button
            previewButton.addEventListener('click', function() {
                updateTagPreview();
                const preview = document.getElementById('tag-preview');
                preview.classList.add('update-animation');
                setTimeout(() => {
                    preview.classList.remove('update-animation');
                }, 1000);
            });
            
            // Function to update tag preview
            function updateTagPreview() {
                const name = document.getElementById('ProductName')?.value || 'Product Name';
                const category = document.getElementById('Category')?.options[document.getElementById('Category').selectedIndex]?.text || 'Product Category';
                const manufacturer = document.getElementById('Manufacturer')?.value || 'Manufacturer';
                const model = document.getElementById('ModelNumber')?.value || 'MODEL-XXX';
                const serial = document.getElementById('SerialNumber')?.value || 'SN12345';
                const location = document.getElementById('Location')?.value || 'Storage Location';
                const maintenance = document.getElementById('MaintenanceInfo')?.value || 'Maintenance information';
                
                // Handle dates
                let mfgDate = 'Jan 1, 2025';
                if (document.getElementById('ManufactureDate')?.value) {
                    const date = new Date(document.getElementById('ManufactureDate').value);
                    mfgDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
                }
                
                let warrantyDate = 'Jan 1, 2026';
                if (document.getElementById('WarrantyExpiration')?.value) {
                    const date = new Date(document.getElementById('WarrantyExpiration').value);
                    warrantyDate = date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
                }
                
                const bgColor = document.getElementById('BackgroundColor')?.value || '#ffffff';
                const textColor = document.getElementById('TextColor')?.value || '#000000';
                const accentColor = document.getElementById('AccentColor')?.value || '#0284c7';
                
                const preview = document.getElementById('tag-preview');
                
                // Update text content
                document.getElementById('preview-name').textContent = name;
                document.getElementById('preview-category').textContent = category;
                document.getElementById('preview-manufacturer').textContent = manufacturer;
                document.getElementById('preview-model').textContent = model;
                document.getElementById('preview-serial').textContent = serial;
                document.getElementById('preview-location').textContent = location;
                document.getElementById('preview-maintenance').textContent = maintenance;
                document.getElementById('preview-mfgdate').textContent = mfgDate;
                document.getElementById('preview-warranty').textContent = warrantyDate;
                
                // Update styles
                preview.style.backgroundColor = bgColor;
                preview.style.color = textColor;
                document.getElementById('preview-name').style.color = accentColor;
                document.getElementById('preview-category').style.backgroundColor = accentColor;
                document.getElementById('preview-category').style.color = bgColor;
                
                const icons = preview.querySelectorAll('i');
                icons.forEach(icon => {
                    icon.style.color = accentColor;
                });
            }
            
            // Form validation
            const form = document.getElementById('product-form');
            form.addEventListener('submit', function(e) {
                const requiredFields = form.querySelectorAll('[required]');
                let hasErrors = false;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        hasErrors = true;
                        field.classList.add('border-red-500');
                        if (!field.nextElementSibling.textContent) {
                            field.nextElementSibling.textContent = 'This field is required';
                        }
                    } else {
                        field.classList.remove('border-red-500');
                        if (field.nextElementSibling.textContent === 'This field is required') {
                            field.nextElementSibling.textContent = '';
                        }
                    }
                });
                
                if (hasErrors) {
                    e.preventDefault();
                    const firstError = form.querySelector('.border-red-500');
                    if (firstError) {
                        firstError.focus();
                        showNotification('Please fill in all required fields', 'error');
                    }
                }
            });
        });
    </script>
}