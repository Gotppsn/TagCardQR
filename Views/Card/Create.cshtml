@model CardTagManager.Models.Card

@{
    ViewData["Title"] = "Create New Product";
}

<div class="mb-6">
    <a asp-action="Index" class="inline-flex items-center text-primary-600 hover:text-primary-700 transition-colors group">
        <i class="fas fa-arrow-left mr-2 group-hover:-translate-x-1 transition-transform"></i> Back to Library
    </a>
</div>

<!-- Form Progress Indicator -->
<div class="form-progress mb-6">
    <div class="flex items-center justify-between max-w-2xl mx-auto">
        <div class="step active" data-step="1">
            <div class="step-circle bg-primary-600 text-white h-8 w-8 rounded-full flex items-center justify-center">1</div>
            <div class="step-label text-sm font-medium mt-1">Basic Info</div>
        </div>
        <div class="step-connector h-1 flex-grow bg-gray-200 mx-2 relative">
            <div class="absolute inset-0 bg-primary-600 step-progress" style="width: 0%"></div>
        </div>
        <div class="step" data-step="2">
            <div class="step-circle bg-gray-200 text-gray-600 h-8 w-8 rounded-full flex items-center justify-center">2</div>
            <div class="step-label text-sm font-medium mt-1">Details</div>
        </div>
        <div class="step-connector h-1 flex-grow bg-gray-200 mx-2 relative">
            <div class="absolute inset-0 bg-primary-600 step-progress" style="width: 0%"></div>
        </div>
        <div class="step" data-step="3">
            <div class="step-circle bg-gray-200 text-gray-600 h-8 w-8 rounded-full flex items-center justify-center">3</div>
            <div class="step-label text-sm font-medium mt-1">Appearance</div>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-5 gap-8 fade-in">
    <!-- Form Section (3 columns) -->
    <div class="lg:col-span-3">
        <div class="card">
            <div class="card-header">
                <h2 class="text-xl font-bold text-gray-800 flex items-center">
                    <i class="fas fa-plus-circle text-primary-500 mr-2"></i> Add New Product
                </h2>
                <p class="text-sm text-gray-500 mt-1">Fill in the details for your product tag</p>
            </div>
            
            <!-- Template Gallery -->
            <div class="px-6 pt-4 pb-2">
                <div class="flex justify-between items-center mb-3">
                    <h3 class="text-sm font-medium text-gray-700">Quick Start Templates</h3>
                    <button type="button" id="create-template-btn" class="text-sm inline-flex items-center text-primary-600 hover:text-primary-700">
                        <i class="fas fa-plus-circle mr-1"></i> New Template
                    </button>
                </div>
                <div class="grid grid-cols-3 gap-3 mb-4" id="template-container">
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="chemical">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="chemical">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-blue-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-flask text-blue-500 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Chemical Product</p>
                    </div>
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="equipment">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="equipment">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-purple-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-tools text-purple-500 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Equipment</p>
                    </div>
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="safety">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="safety">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-orange-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-hard-hat text-orange-500 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Safety Equipment</p>
                    </div>
                </div>
                
                <div class="grid grid-cols-3 gap-3">
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="electronic">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="electronic">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-green-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-microchip text-green-500 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Electronic Device</p>
                    </div>
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="machinery">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="machinery">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-yellow-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-cogs text-yellow-600 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Industrial Machinery</p>
                    </div>
                    <div class="template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative" data-template="design">
                        <div class="absolute top-1 right-1 flex template-actions opacity-0 transition-opacity group-hover:opacity-100">
                            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="design">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                        <div class="aspect-w-16 aspect-h-10 bg-red-50 rounded mb-2 p-2 flex items-center justify-center">
                            <i class="fas fa-paint-brush text-red-500 text-xl"></i>
                        </div>
                        <p class="text-xs text-center">Design Template</p>
                    </div>
                </div>
            </div>
            
        <form asp-action="Create" method="post" id="product-form" enctype="multipart/form-data">
            <!-- Add hidden fields for QR colors and template type -->
            <input type="hidden" name="QrFgColor" id="qrFgColorHidden" value="#000000" />
            <input type="hidden" name="QrBgColor" id="qrBgColorHidden" value="#FFFFFF" />
            <input type="hidden" name="TemplateType" id="templateTypeHidden" value="" />
                <div class="card-body">
                    <!-- Step 1: Basic Information -->
                    <div class="form-section" data-step="1">
                        <h3 class="text-md font-semibold text-gray-700 mb-4 pb-2 border-b">Basic Information</h3>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-4">
                                <div class="form-group">
                                    <label asp-for="ProductName" class="form-label flex items-center">
                                        Product Name
                                        <span class="text-red-500 ml-1">*</span>
                                        <span class="ml-auto text-xs text-gray-400" id="name-counter">0/100</span>
                                    </label>
                                    <div class="relative">
                                        <input asp-for="ProductName" class="form-input pl-9" required 
                                               placeholder="RustShield Pro 5000" maxlength="100"
                                               oninput="countChars(this, 'name-counter', 100)">
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <i class="fas fa-tag text-gray-400"></i>
                                        </div>
                                        <div class="validation-icon absolute inset-y-0 right-3 flex items-center hidden" id="name-valid">
                                            <i class="fas fa-check-circle text-green-500"></i>
                                        </div>
                                    </div>
                                    <span asp-validation-for="ProductName" class="form-error"></span>
                                </div>
                                
                                <div class="form-group">
                                    <label asp-for="Category" class="form-label">
                                        Category
                                        <span class="text-red-500 ml-1">*</span>
                                    </label>
                                    <div class="relative">
                                        <select asp-for="Category" class="form-input pl-9" id="category-select">
                                            <option value="Rust Coating Chemical">Rust Coating Chemical</option>
                                            <option value="Application Equipment">Application Equipment</option>
                                            <option value="Lab Equipment">Lab Equipment</option>
                                            <option value="Office Equipment">Office Equipment</option>
                                            <option value="Safety Equipment">Safety Equipment</option>
                                            <option value="Electronic Device">Electronic Device</option>
                                            <option value="Industrial Machinery">Industrial Machinery</option>
                                            <option value="Design Asset">Design Asset</option>
                                            <option value="Quality Control">Quality Control</option>
                                            <option value="Other">Other</option>
                                        </select>
                                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <i class="fas fa-folder text-gray-400"></i>
                                        </div>
                                    </div>
                                    <span asp-validation-for="Category" class="form-error"></span>
                                </div>
                                
                                <div class="form-group">
                                    <label class="form-label">Product Image</label>
                                    <div class="border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:bg-gray-50 transition-colors cursor-pointer" id="dropzone">
                                        <input type="file" class="hidden" id="product-image" name="ImageFile" accept="image/*">
                                        <div class="flex flex-col items-center justify-center">
                                            <i class="fas fa-cloud-upload-alt text-2xl text-gray-400 mb-2"></i>
                                            <p class="text-sm text-gray-500 mb-1">Drag and drop an image here or click to browse</p>
                                            <p class="text-xs text-gray-400">PNG, JPG up to 5MB</p>
                                        </div>
                                    </div>
                                    <div id="image-preview" class="hidden mt-2">
                                        <div class="flex items-center justify-between bg-gray-50 rounded-lg p-2">
                                            <div class="flex items-center">
                                                <img src="" alt="Preview" class="w-10 h-10 object-cover rounded mr-2">
                                                <span class="text-sm text-gray-700 filename">filename.jpg</span>
                                            </div>
                                            <button type="button" class="text-red-500 hover:text-red-700" id="remove-image">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="space-y-4" id="template-fields-container">
                                <!-- Template-specific fields will be added here dynamically -->
                                <div class="p-4 bg-gray-50 rounded-lg text-center">
                                    <i class="fas fa-arrow-left text-gray-400 text-2xl mb-2"></i>
                                    <p class="text-gray-500">Select a template to see additional fields</p>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Dynamic Custom Fields Container -->
                        <div id="custom-fields-container" class="mt-4 pt-4 border-t border-gray-200">
                            <!-- Custom fields will be inserted here -->
                        </div>
                        
                        <div class="flex justify-end mt-6">
                            <button type="button" class="btn-primary next-step" data-next="2">
                                Continue to Details <i class="fas fa-arrow-right ml-2"></i>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Step 2: Product Details -->
                    <div class="form-section hidden" data-step="2">
                        <h3 class="text-md font-semibold text-gray-700 mb-4 pb-2 border-b">Product Details</h3>
                        
                        <div class="space-y-4">
                            <div class="form-group">
                                <label asp-for="Location" class="form-label">Location</label>
                                <div class="relative">
                                    <input asp-for="Location" class="form-input pl-9" placeholder="Chemical Storage Room A">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-map-marker-alt text-gray-400"></i>
                                    </div>
                                </div>
                                <span asp-validation-for="Location" class="form-error"></span>
                            </div>
                            
                            <!-- Chemical Storage Conditions (Only for chemical products) -->
                            <div class="form-group field-group chemical-field" style="display: none;">
                                <label for="StorageConditions" class="form-label">Storage Conditions</label>
                                <div class="relative">
                                    <textarea id="StorageConditions" name="StorageConditions" class="form-input h-20 pl-9" 
                                              placeholder="Store at 10-15°C, away from direct sunlight, in a well-ventilated area"></textarea>
                                    <div class="absolute top-3 left-0 pl-3 flex items-start pointer-events-none">
                                        <i class="fas fa-temperature-low text-gray-400"></i>
                                    </div>
                                </div>
                            </div>

                            <!-- Design Dimensions (Only for design templates) -->
                            <div class="form-group field-group design-field" style="display: none;">
                                <label for="Dimensions" class="form-label">Dimensions</label>
                                <div class="relative">
                                    <input type="text" id="Dimensions" name="Dimensions" class="form-input pl-9" 
                                          placeholder="1920x1080px, 300DPI">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-ruler-combined text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="MaintenanceInfo" class="form-label">Maintenance Information</label>
                                <div class="relative">
                                    <textarea asp-for="MaintenanceInfo" class="form-input h-20 pl-9" 
                                              placeholder="Regular maintenance requirements and recommendations"></textarea>
                                    <div class="absolute top-3 left-0 pl-3 flex items-start pointer-events-none">
                                        <i class="fas fa-wrench text-gray-400"></i>
                                    </div>
                                </div>
                                <span asp-validation-for="MaintenanceInfo" class="form-error"></span>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                            <div class="form-group">
                                <label asp-for="ManufactureDate" class="form-label">
                                    Manufacture Date
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input asp-for="ManufactureDate" type="date" class="form-input pl-9" required>
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-calendar-day text-gray-400"></i>
                                    </div>
                                </div>
                                <span asp-validation-for="ManufactureDate" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="PurchaseDate" class="form-label">
                                    Purchase Date
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input asp-for="PurchaseDate" type="date" class="form-input pl-9" required>
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-shopping-cart text-gray-400"></i>
                                    </div>
                                </div>
                                <span asp-validation-for="PurchaseDate" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="WarrantyExpiration" class="form-label warranty-label">
                                    Warranty Until
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input asp-for="WarrantyExpiration" type="date" class="form-input pl-9 warranty-input" required>
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-shield-alt text-gray-400"></i>
                                    </div>
                                </div>
                                <span asp-validation-for="WarrantyExpiration" class="form-error"></span>
                            </div>
                        </div>

                        <!-- License field (Only for design templates) -->
                        <div class="form-group field-group design-field mt-4" style="display: none;">
                            <label for="LicenseInfo" class="form-label">License Information</label>
                            <div class="relative">
                                <select id="LicenseInfo" name="LicenseInfo" class="form-input pl-9">
                                    <option value="Internal Use Only">Internal Use Only</option>
                                    <option value="Company Licensed">Company Licensed</option>
                                    <option value="Perpetual License">Perpetual License</option>
                                    <option value="Royalty Free">Royalty Free</option>
                                    <option value="Rights Managed">Rights Managed</option>
                                </select>
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <i class="fas fa-copyright text-gray-400"></i>
                                </div>
                            </div>
                        </div>
                        
                        <div class="flex justify-between mt-6">
                            <button type="button" class="btn-secondary prev-step" data-prev="1">
                                <i class="fas fa-arrow-left mr-2"></i> Back to Basic Info
                            </button>
                            <button type="button" class="btn-primary next-step" data-next="3">
                                Continue to Appearance <i class="fas fa-arrow-right ml-2"></i>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Step 3: Appearance -->
                    <div class="form-section hidden" data-step="3">
                        <h3 class="text-md font-semibold text-gray-700 mb-4 pb-2 border-b">Card Appearance</h3>
                        
                        <div class="mb-6">
                            <label class="form-label">Card Layout</label>
                            <div class="grid grid-cols-3 gap-3">
                                <div class="layout-option border rounded-lg p-2 cursor-pointer hover:border-primary-500 transition-colors active" data-layout="standard">
                                    <input type="hidden" name="Layout" id="layoutHidden" value="standard" />
                                    <div class="bg-gray-100 rounded mb-1 flex items-center justify-center p-3">
                                        <div class="w-full aspect-w-16 aspect-h-10 bg-white rounded shadow-sm p-1">
                                            <div class="flex">
                                                <div class="flex-grow">
                                                    <div class="w-1/2 h-2 bg-gray-300 rounded mb-1"></div>
                                                    <div class="w-3/4 h-1 bg-gray-300 rounded mb-2"></div>
                                                    <div class="space-y-1">
                                                        <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                        <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                    </div>
                                                </div>
                                                <div class="w-1/4 flex items-center justify-center">
                                                    <div class="w-10 h-10 bg-gray-300 rounded"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="text-xs text-center">Standard</p>
                                </div>
                                <div class="layout-option border rounded-lg p-2 cursor-pointer hover:border-primary-500 transition-colors" data-layout="modern">
                                    <div class="bg-gray-100 rounded mb-1 flex items-center justify-center p-3">
                                        <div class="w-full aspect-w-16 aspect-h-10 bg-white rounded shadow-sm p-1">
                                            <div class="flex flex-col">
                                                <div class="h-1/3 w-full bg-gray-300 rounded-t"></div>
                                                <div class="p-1 flex">
                                                    <div class="flex-grow">
                                                        <div class="w-1/2 h-1 bg-gray-300 rounded mb-1"></div>
                                                        <div class="space-y-1">
                                                            <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                            <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                        </div>
                                                    </div>
                                                    <div class="w-1/4 flex items-center justify-center">
                                                        <div class="w-8 h-8 bg-gray-300 rounded-full"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="text-xs text-center">Modern</p>
                                </div>
                                <div class="layout-option border rounded-lg p-2 cursor-pointer hover:border-primary-500 transition-colors" data-layout="compact">
                                    <div class="bg-gray-100 rounded mb-1 flex items-center justify-center p-3">
                                        <div class="w-full aspect-w-16 aspect-h-10 bg-white rounded shadow-sm p-1">
                                            <div class="flex">
                                                <div class="flex-grow p-1">
                                                    <div class="w-3/4 h-2 bg-gray-300 rounded mb-1"></div>
                                                    <div class="space-y-1 mt-1">
                                                        <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                        <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                        <div class="w-full h-1 bg-gray-300 rounded"></div>
                                                    </div>
                                                </div>
                                                <div class="w-1/3 bg-gray-200 rounded-r flex items-center justify-center">
                                                    <div class="w-8 h-8 bg-gray-300 rounded"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="text-xs text-center">Compact</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="form-group">
                                <label asp-for="BackgroundColor" class="form-label">Background Color</label>
                                <div class="color-picker-wrapper">
                                <div class="flex">
                                    <input asp-for="BackgroundColor" type="color" class="color-input hidden" id="bg-color-picker">
                                    <div class="color-preview w-10 h-10 border border-gray-300 rounded-lg shadow-inner cursor-pointer" id="bg-color-preview" style="background-color: #ffffff"></div>
                                    <input asp-for="BackgroundColor" type="text" class="form-input ml-2 flex-grow" placeholder="#ffffff" value="#ffffff">
                                </div>
                                    <div class="color-presets mt-2 flex flex-wrap gap-2">
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#ffffff" style="background-color: #ffffff;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#f8fafc" style="background-color: #f8fafc;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#f0f9ff" style="background-color: #f0f9ff;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#1e293b" style="background-color: #1e293b;"></span>
                                    </div>
                                </div>
                                <span asp-validation-for="BackgroundColor" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="TextColor" class="form-label">Text Color</label>
                                <div class="color-picker-wrapper">
                                    <div class="flex">
                                        <input type="color" class="color-input w-10 h-10 border border-gray-300 rounded-lg shadow-inner cursor-pointer" id="text-color-picker" value="#000000">
                                        <input asp-for="TextColor" type="text" class="form-input ml-2 flex-grow" placeholder="#000000" value="#000000">
                                    </div>
                                    <div class="color-presets mt-2 flex flex-wrap gap-2">
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#000000" style="background-color: #000000;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#1e293b" style="background-color: #1e293b;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#ffffff" style="background-color: #ffffff;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#64748b" style="background-color: #64748b;"></span>
                                    </div>
                                </div>
                                <span asp-validation-for="TextColor" class="form-error"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="AccentColor" class="form-label">Accent Color</label>
                                <div class="color-picker-wrapper">
                                    <div class="flex">
                                        <input type="color" class="color-input w-10 h-10 border border-gray-300 rounded-lg shadow-inner cursor-pointer" id="accent-color-picker" value="#0284c7">
                                        <input asp-for="AccentColor" type="text" class="form-input ml-2 flex-grow" placeholder="#0284c7" value="#0284c7">
                                    </div>
                                    <div class="color-presets mt-2 flex flex-wrap gap-2">
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#0284c7" style="background-color: #0284c7;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#f97316" style="background-color: #f97316;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#16a34a" style="background-color: #16a34a;"></span>
                                        <span class="color-preset w-6 h-6 rounded-full border border-gray-200 shadow-sm cursor-pointer hover:scale-110 transition-transform" data-color="#9333ea" style="background-color: #9333ea;"></span>
                                    </div>
                                </div>
                                <span asp-validation-for="AccentColor" class="form-error"></span>
                            </div>
                        </div>
                        
                        <div class="mt-6 p-4 bg-gray-50 rounded-lg">
                            <h4 class="text-sm font-medium mb-3">QR Code Options</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="text-xs text-gray-600 block mb-1">Foreground Color</label>
                                    <div class="flex">
                                        <input type="color" class="w-10 h-10 border border-gray-300 rounded-lg cursor-pointer" value="#000000" id="qr-fg-color">
                                        <input type="text" class="form-input ml-2 flex-grow text-sm" value="#000000" id="qr-fg-color-text">
                                    </div>
                                </div>
                                <div>
                                    <label class="text-xs text-gray-600 block mb-1">Background Color</label>
                                    <div class="flex">
                                        <input type="color" class="w-10 h-10 border border-gray-300 rounded-lg cursor-pointer" value="#ffffff" id="qr-bg-color">
                                        <input type="text" class="form-input ml-2 flex-grow text-sm" value="#ffffff" id="qr-bg-color-text">
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="flex justify-between mt-6">
                            <button type="button" class="btn-secondary prev-step" data-prev="2">
                                <i class="fas fa-arrow-left mr-2"></i> Back to Details
                            </button>
                            <button type="submit" class="btn-primary relative group">
                                <span class="flex items-center">
                                    <i class="fas fa-save mr-2"></i> Create Product
                                </span>
                                <span class="absolute inset-0 flex items-center justify-center bg-primary-600 rounded-md opacity-0 transition-opacity group-hover:opacity-0 group-active:opacity-100">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </span>
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="card-footer">
                    <div class="flex justify-between items-center">
                        <div class="text-sm text-gray-500">
                            <span class="text-red-500">*</span> Required fields
                        </div>
                        <div class="text-sm text-gray-500">
                            <span class="step-indicator">Step 1 of 3</span>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Preview Section (2 columns) -->
    <div class="lg:col-span-2">
        <div class="sticky top-6 space-y-4">
            <div class="flex justify-between items-center mb-2">
                <h3 class="text-lg font-bold text-gray-800 flex items-center">
                    <i class="fas fa-eye text-primary-500 mr-2"></i> Tag Preview
                </h3>
                <div class="preview-controls flex gap-2">
                    <button type="button" class="text-sm text-gray-600 hover:text-gray-800 flex items-center p-1 hover:bg-gray-100 rounded transition-colors" id="rotate-preview">
                        <i class="fas fa-sync-alt mr-1"></i> Rotate
                    </button>
                    <button type="button" class="text-sm text-gray-600 hover:text-gray-800 flex items-center p-1 hover:bg-gray-100 rounded transition-colors" id="zoom-preview">
                        <i class="fas fa-search-plus mr-1"></i> Zoom
                    </button>
                </div>
            </div>
            
            <div class="card shadow-lg transition-all duration-300" id="card-preview-container">
                <div class="business-card" id="tag-preview" style="background-color: #ffffff; color: #000000">
                    <div class="p-6 h-full flex flex-col">
                        <div class="mb-4">
                            <span id="preview-category" class="px-2 py-1 text-xs font-semibold rounded-full" style="background-color: #0284c7; color: #ffffff">
                                Product Category
                            </span>
                            <h3 id="preview-name" class="text-xl font-bold mt-2" style="color: #0284c7">Product Name</h3>
                            <p id="preview-manufacturer" class="text-md">Manufacturer</p>
                            <div class="flex items-center space-x-2 mt-1 text-sm">
                                <span class="font-semibold">Model:</span>
                                <span id="preview-model">MODEL-XXX</span>
                            </div>
                            <div class="flex items-center space-x-2 text-sm">
                                <span class="font-semibold">Serial:</span>
                                <span id="preview-serial">SN12345</span>
                            </div>
                            <!-- Custom field previews -->
                            <div id="preview-custom-fields" class="mt-2 text-sm"></div>
                        </div>
                        <div class="space-y-2 mt-auto text-sm">
                            <p class="flex items-center">
                                <i class="fas fa-map-marker-alt mr-3" style="color: #0284c7"></i>
                                <span class="font-medium">Location:</span>&nbsp;<span id="preview-location">Storage Location</span>
                            </p>
                            <p class="flex items-center">
                                <i class="fas fa-calendar-day mr-3" style="color: #0284c7"></i>
                                <span class="font-medium">Manufactured:</span>&nbsp;<span id="preview-mfgdate">Jan 1, 2025</span>
                            </p>
                            <p class="flex items-center warranty-preview">
                                <i class="fas fa-calendar-check mr-3" style="color: #0284c7"></i>
                                <span class="font-medium">Warranty Until:</span>&nbsp;<span id="preview-warranty">Jan 1, 2026</span>
                            </p>
                            <p class="flex items-center">
                                <i class="fas fa-wrench mr-3" style="color: #0284c7"></i>
                                <span class="font-medium">Maintenance:</span>&nbsp;<span id="preview-maintenance">Maintenance information</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card p-4">
                <h4 class="text-sm font-medium mb-3">QR Code Preview</h4>
                <div class="flex justify-center">
                    <div class="qr-preview p-3 bg-white border border-gray-200 rounded-lg shadow-sm">
                        <div class="w-32 h-32 bg-gray-100 flex items-center justify-center">
                            <i class="fas fa-qrcode text-gray-400 text-4xl"></i>
                        </div>
                        <p class="text-center text-xs mt-2 text-gray-500">Scan for product details</p>
                    </div>
                </div>
            </div>
            
            <div class="bg-blue-50 border-l-4 border-blue-400 p-4 rounded">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="fas fa-info-circle text-blue-400"></i>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-blue-800">Tips for effective product tags</h3>
                        <ul class="mt-2 text-sm text-blue-700 list-disc list-inside">
                            <li>Use clear, descriptive product names</li>
                            <li>Keep maintenance information concise and specific</li>
                            <li>Choose contrasting colors for better readability</li>
                            <li>Ensure accurate model and serial numbers</li>
                            <li>Always include current location information</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Template Modal -->
<div id="create-template-modal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
    <div class="absolute inset-0 bg-black bg-opacity-50"></div>
    <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 relative z-10 transform transition-all duration-300 opacity-0 scale-95">
        <div class="p-5 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h3 class="text-lg font-bold text-gray-800" id="template-modal-title">Create New Template</h3>
                <button type="button" class="text-gray-400 hover:text-gray-600 focus:outline-none" id="close-template-modal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="p-5">
            <form id="template-form" class="space-y-4">
                <input type="hidden" id="template-edit-id" value="" />
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-group">
                        <label class="form-label">Template Name <span class="text-red-500">*</span></label>
                        <input type="text" id="template-name" class="form-input" placeholder="E.g., Laboratory Equipment" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Category <span class="text-red-500">*</span></label>
                        <input type="text" id="template-category" class="form-input" placeholder="E.g., Lab Equipment" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Icon Selection <span class="text-red-500">*</span></label>
                    <div class="grid grid-cols-4 md:grid-cols-6 gap-3 mt-1">
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all active" data-icon="flask">
                            <i class="fas fa-flask text-primary-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="microscope">
                            <i class="fas fa-microscope text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="vial">
                            <i class="fas fa-vial text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="laptop">
                            <i class="fas fa-laptop text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="file-alt">
                            <i class="fas fa-file-alt text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="shield-alt">
                            <i class="fas fa-shield-alt text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="cogs">
                            <i class="fas fa-cogs text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="tools">
                            <i class="fas fa-tools text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="box">
                            <i class="fas fa-box text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="globe">
                            <i class="fas fa-globe text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="bolt">
                            <i class="fas fa-bolt text-gray-500 text-2xl"></i>
                        </div>
                        <div class="icon-option border rounded-lg p-3 flex items-center justify-center cursor-pointer hover:border-primary-500 transition-all" data-icon="cube">
                            <i class="fas fa-cube text-gray-500 text-2xl"></i>
                        </div>
                    </div>
                    <input type="hidden" id="template-icon" value="flask">
                </div>
                
                <div class="form-group">
                    <label class="form-label">Background Color</label>
                    <div class="flex">
                        <input type="color" id="template-bg-color" class="w-10 h-10 border border-gray-300 rounded-lg cursor-pointer" value="#f0f9ff">
                        <input type="text" id="template-bg-color-text" class="form-input ml-2 flex-grow" value="#f0f9ff">
                    </div>
                </div>
                
                <div class="border-t border-gray-200 pt-4 mt-4">
                    <div class="flex justify-between items-center mb-3">
                        <h4 class="text-md font-semibold text-gray-700">Custom Fields</h4>
                        <button type="button" id="add-field-btn" class="text-sm inline-flex items-center text-primary-600 hover:text-primary-700">
                            <i class="fas fa-plus-circle mr-1"></i> Add Field
                        </button>
                    </div>
                    
                    <div id="custom-fields" class="space-y-4">
                        <!-- Fields will be added here -->
                        <div class="custom-field-row flex items-start gap-2">
                            <div class="flex-grow">
                                <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                                    <div class="form-group">
                                        <label class="form-label text-sm">Field Name <span class="text-red-500">*</span></label>
                                        <input type="text" class="form-input py-2 text-sm field-name" placeholder="E.g., Lab ID" required>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label text-sm">Field Type <span class="text-red-500">*</span></label>
                                        <select class="form-input py-2 text-sm field-type">
                                            <option value="text">Text</option>
                                            <option value="select">Dropdown</option>
                                            <option value="number">Number</option>
                                            <option value="date">Date</option>
                                            <option value="textarea">Text Area</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label text-sm">Icon</label>
                                        <select class="form-input py-2 text-sm field-icon">
                                            <option value="tag">Tag</option>
                                            <option value="info-circle">Info</option>
                                            <option value="check-circle">Check</option>
                                            <option value="flag">Flag</option>
                                            <option value="clipboard">Clipboard</option>
                                            <option value="calendar">Calendar</option>
                                            <option value="user">User</option>
                                            <option value="link">Link</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="field-options hidden mt-2">
                                    <label class="form-label text-sm">Options (comma separated)</label>
                                    <input type="text" class="form-input py-2 text-sm field-options-input" placeholder="Option 1, Option 2, Option 3">
                                </div>
                                <div class="form-group mt-2">
                                    <label class="form-label text-sm">Placeholder</label>
                                    <input type="text" class="form-input py-2 text-sm field-placeholder" placeholder="Enter placeholder text">
                                </div>
                            </div>
                            <div class="flex-shrink-0 mt-6">
                                <button type="button" class="p-2 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-full remove-field-btn">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="p-5 border-t border-gray-200 bg-gray-50 flex justify-end">
            <button type="button" class="btn-secondary mr-2" id="cancel-template-btn">
                Cancel
            </button>
            <button type="button" class="btn-danger mr-2 hidden" id="delete-template-btn">
                <i class="fas fa-trash mr-2"></i> Delete Template
            </button>
            <button type="button" class="btn-primary" id="save-template-btn">
                <i class="fas fa-save mr-2"></i> Save Template
            </button>
        </div>
    </div>
</div>

<!-- Delete Template Confirmation Modal -->
<div id="delete-template-modal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
    <div class="absolute inset-0 bg-black bg-opacity-50"></div>
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 relative z-10 transform transition-all duration-300 opacity-0 scale-95">
        <div class="p-5 border-b border-gray-200">
            <div class="flex justify-between items-center">
                <h3 class="text-lg font-bold text-gray-800">Delete Template</h3>
                <button type="button" class="text-gray-400 hover:text-gray-600 focus:outline-none" id="close-delete-modal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="p-5">
            <p class="text-gray-700">Are you sure you want to delete this template? This action cannot be undone.</p>
            <p class="mt-2 text-sm text-gray-500" id="delete-template-name"></p>
            <input type="hidden" id="delete-template-id" value="" />
        </div>
        <div class="p-5 border-t border-gray-200 bg-gray-50 flex justify-end">
            <button type="button" class="btn-secondary mr-2" id="cancel-delete-btn">
                Cancel
            </button>
            <button type="button" class="btn-danger" id="confirm-delete-btn">
                <i class="fas fa-trash mr-2"></i> Delete
            </button>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Function to update QR color values to hidden fields
        function updateQrColors() {
            document.getElementById('qrFgColorHidden').value = document.getElementById('qr-fg-color').value || '#000000';
            document.getElementById('qrBgColorHidden').value = document.getElementById('qr-bg-color').value || '#FFFFFF';
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize all form components
            initializeSteps();
            initializeColorPickers();
            initializeCardLayouts();
            initializeImageUpload();
            initializeTemplates();
            initializeFieldVisibility();
            initializeTemplateModal();
            updateTagPreview();
            
            // Handle category change to show/hide relevant fields
            document.getElementById('category-select').addEventListener('change', function() {
                updateFieldVisibility(this.value);
            });
            
            // Initialize field visibility based on template type
            function initializeFieldVisibility() {
                // Get the initial template type from the hidden field
                const templateType = document.getElementById('templateTypeHidden').value;
                if (templateType) {
                    updateFieldVisibility(templateType);
                }
            }
            
            // Show/hide fields based on category/template type
            function updateFieldVisibility(category) {
                // Hide all custom fields first
                const fieldGroups = document.querySelectorAll('.field-group');
                fieldGroups.forEach(field => {
                    field.style.display = 'none';
                });
                
                // Clear template fields container
                const templateFieldsContainer = document.getElementById('template-fields-container');
                templateFieldsContainer.innerHTML = '';
                
                // Show fields based on category or template type
                switch(category.toLowerCase()) {
                    case 'chemical':
                    case 'rust coating chemical':
                        generateTemplateFields('chemical', templateFieldsContainer);
                        document.querySelectorAll('.chemical-field').forEach(field => {
                            field.style.display = 'block';
                        });
                        break;
                    case 'safety':
                    case 'safety equipment':
                        generateTemplateFields('safety', templateFieldsContainer);
                        document.querySelectorAll('.safety-field').forEach(field => {
                            field.style.display = 'block';
                        });
                        break;
                    case 'electronic':
                    case 'electronic device':
                        generateTemplateFields('electronic', templateFieldsContainer);
                        document.querySelectorAll('.electronic-field').forEach(field => {
                            field.style.display = 'block';
                        });
                        break;
                    case 'machinery':
                    case 'industrial machinery':
                        generateTemplateFields('machinery', templateFieldsContainer);
                        document.querySelectorAll('.machinery-field').forEach(field => {
                            field.style.display = 'block';
                        });
                        break;
                    case 'design':
                    case 'design asset':
                        generateTemplateFields('design', templateFieldsContainer);
                        document.querySelectorAll('.design-field').forEach(field => {
                            field.style.display = 'block';
                        });
                        
                        // For design assets, change "Warranty" to "License Expiration"
                        document.querySelector('.warranty-label').innerHTML = 'License Expiration <span class="text-red-500 ml-1">*</span>';
                        document.querySelector('.warranty-preview .font-medium').textContent = 'License Until:';
                        break;
                    default:
                        // For other categories, ensure warranty label is correct
                        document.querySelector('.warranty-label').innerHTML = 'Warranty Until <span class="text-red-500 ml-1">*</span>';
                        document.querySelector('.warranty-preview .font-medium').textContent = 'Warranty Until:';
                        
                        // Check if it's a custom template and display custom fields
                        const customTemplates = getCustomTemplates();
                        const customTemplate = customTemplates.find(t => t.category.toLowerCase() === category.toLowerCase() || t.id === category);
                        if (customTemplate) {
                            displayCustomTemplateFields(customTemplate, templateFieldsContainer);
                        } else {
                            // Show default fields if no template matched
                            generateDefaultFields(templateFieldsContainer);
                        }
                        break;
                }
            }

            // Generate default template fields
            function generateDefaultFields(container) {
                container.innerHTML = `
                    <div class="form-group">
                        <label for="Manufacturer" class="form-label">
                            Manufacturer
                            <span class="text-red-500 ml-1">*</span>
                        </label>
                        <div class="relative">
                            <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="Manufacturer Name">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-industry text-gray-400"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="ModelNumber" class="form-label">
                            Model Number
                            <span class="text-red-500 ml-1">*</span>
                        </label>
                        <div class="relative">
                            <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="MODEL-XXX">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-barcode text-gray-400"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="SerialNumber" class="form-label">
                            Serial Number
                            <span class="text-red-500 ml-1">*</span>
                        </label>
                        <div class="relative">
                            <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="SN12345">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-fingerprint text-gray-400"></i>
                            </div>
                        </div>
                    </div>
                `;
            }
            
            // Generate template-specific fields
            function generateTemplateFields(type, container) {
                switch(type) {
                    case 'chemical':
                        container.innerHTML = `
                            <div class="form-group">
                                <label for="Manufacturer" class="form-label">
                                    Manufacturer
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="ChemTech Industries">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-industry text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ChemicalType" class="form-label">
                                    Chemical Type
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <select id="ChemicalType" name="ChemicalType" class="form-input pl-9" required>
                                        <option value="Acid">Acid</option>
                                        <option value="Alkali">Alkali</option>
                                        <option value="Solvent">Solvent</option>
                                        <option value="Coating">Coating</option>
                                        <option value="Other">Other</option>
                                    </select>
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-flask text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ModelNumber" class="form-label">
                                    Model Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="RS-5000-X">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-barcode text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SerialNumber" class="form-label">
                                    Serial Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="CT20250001">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-fingerprint text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                        `;
                        break;
                    case 'safety':
                        container.innerHTML = `
                            <div class="form-group">
                                <label for="Manufacturer" class="form-label">
                                    Manufacturer
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="SafetyFirst Inc.">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-industry text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SafetyStandard" class="form-label">
                                    Safety Standard
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SafetyStandard" name="SafetyStandard" class="form-input pl-9" required placeholder="ISO 9001, ANSI Z87.1">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-shield-alt text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ModelNumber" class="form-label">
                                    Model Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="EW-100">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-barcode text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SerialNumber" class="form-label">
                                    Serial Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="SF20245582">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-fingerprint text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                        `;
                        break;
                    case 'electronic':
                        container.innerHTML = `
                            <div class="form-group">
                                <label for="Manufacturer" class="form-label">
                                    Manufacturer
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="ElectroTech Inc.">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-industry text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="PowerRequirement" class="form-label">
                                    Power Requirement
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="PowerRequirement" name="PowerRequirement" class="form-input pl-9" required placeholder="220V, 50Hz, 100W">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-bolt text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ModelNumber" class="form-label">
                                    Model Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="DCS-X500">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-barcode text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SerialNumber" class="form-label">
                                    Serial Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="ET2025001">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-fingerprint text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                        `;
                        break;
                    case 'machinery':
                        container.innerHTML = `
                            <div class="form-group">
                                <label for="Manufacturer" class="form-label">
                                    Manufacturer
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="MachTech Heavy Industries">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-industry text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="OperatingCapacity" class="form-label">
                                    Operating Capacity
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="OperatingCapacity" name="OperatingCapacity" class="form-input pl-9" required placeholder="500 kg/hour">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-tachometer-alt text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ModelNumber" class="form-label">
                                    Model Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="CBS-400">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-barcode text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SerialNumber" class="form-label">
                                    Serial Number
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="MT2024105">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-fingerprint text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                        `;
                        break;
                    case 'design':
                        container.innerHTML = `
                            <div class="form-group">
                                <label for="Manufacturer" class="form-label">
                                    Creator/Studio
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="Manufacturer" name="Manufacturer" class="form-input pl-9" required placeholder="DesignWorks Studio">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-user-tie text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="DesignType" class="form-label">
                                    Design Type
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <select id="DesignType" name="DesignType" class="form-input pl-9" required>
                                        <option value="Graphic">Graphic Design</option>
                                        <option value="Product">Product Design</option>
                                        <option value="Template">Design Template</option>
                                        <option value="Prototype">Prototype</option>
                                        <option value="Other">Other</option>
                                    </select>
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-paint-brush text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="ModelNumber" class="form-label">
                                    Asset ID
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="CIP-2025">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-barcode text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="SerialNumber" class="form-label">
                                    Version/Revision
                                    <span class="text-red-500 ml-1">*</span>
                                </label>
                                <div class="relative">
                                    <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="v1.2">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <i class="fas fa-code-branch text-gray-400"></i>
                                    </div>
                                </div>
                            </div>
                        `;
                        break;
                    default:
                        generateDefaultFields(container);
                        break;
                }
            }
            
            // Display custom template fields
            function displayCustomTemplateFields(template, container) {
                // Clear container
                container.innerHTML = '';
                
                if (!template.fields || template.fields.length === 0) {
                    generateDefaultFields(container);
                    return;
                }
                
                // Create fields based on template definition
                template.fields.forEach(field => {
                    const fieldDiv = document.createElement('div');
                    fieldDiv.className = 'form-group';
                    fieldDiv.setAttribute('data-field-name', field.name);
                    
                    const label = document.createElement('label');
                    label.className = 'form-label';
                    label.innerHTML = `${field.name} <span class="text-red-500 ml-1">*</span>`;
                    label.setAttribute('for', `custom-${field.name.replace(/\s+/g, '-').toLowerCase()}`);
                    
                    const inputWrapper = document.createElement('div');
                    inputWrapper.className = 'relative';
                    
                    // Create the appropriate input based on field type
                    let input;
                    if (field.type === 'textarea') {
                        input = document.createElement('textarea');
                        input.className = 'form-input pl-9 h-20';
                    } else if (field.type === 'select') {
                        input = document.createElement('select');
                        input.className = 'form-input pl-9';
                        
                        // Add options
                        if (field.options) {
                            field.options.forEach(option => {
                                const optionEl = document.createElement('option');
                                optionEl.value = option;
                                optionEl.textContent = option;
                                input.appendChild(optionEl);
                            });
                        }
                    } else {
                        input = document.createElement('input');
                        input.className = 'form-input pl-9';
                        input.type = field.type || 'text';
                    }
                    
                    // Add common attributes
                    input.id = `custom-${field.name.replace(/\s+/g, '-').toLowerCase()}`;
                    input.name = `custom-${field.name.replace(/\s+/g, '-').toLowerCase()}`;
                    input.required = true;
                    if (field.placeholder) input.placeholder = field.placeholder;
                    
                    // Add icon
                    const iconWrapper = document.createElement('div');
                    iconWrapper.className = 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none';
                    
                    const icon = document.createElement('i');
                    icon.className = `fas fa-${field.icon || 'tag'} text-gray-400`;
                    
                    // Assemble the field
                    iconWrapper.appendChild(icon);
                    inputWrapper.appendChild(input);
                    inputWrapper.appendChild(iconWrapper);
                    fieldDiv.appendChild(label);
                    fieldDiv.appendChild(inputWrapper);
                    
                    // Add to container
                    container.appendChild(fieldDiv);
                });
                
                // Always add Model and Serial number fields if not present
                const fieldNames = template.fields.map(f => f.name.toLowerCase());
                
                if (!fieldNames.includes('model number') && !fieldNames.includes('asset id')) {
                    const modelField = document.createElement('div');
                    modelField.className = 'form-group';
                    modelField.innerHTML = `
                        <label for="ModelNumber" class="form-label">
                            Model Number
                            <span class="text-red-500 ml-1">*</span>
                        </label>
                        <div class="relative">
                            <input id="ModelNumber" name="ModelNumber" class="form-input pl-9" required placeholder="MODEL-XXX">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-barcode text-gray-400"></i>
                            </div>
                        </div>
                    `;
                    container.appendChild(modelField);
                }
                
                if (!fieldNames.includes('serial number') && !fieldNames.includes('version/revision')) {
                    const serialField = document.createElement('div');
                    serialField.className = 'form-group';
                    serialField.innerHTML = `
                        <label for="SerialNumber" class="form-label">
                            Serial Number
                            <span class="text-red-500 ml-1">*</span>
                        </label>
                        <div class="relative">
                            <input id="SerialNumber" name="SerialNumber" class="form-input pl-9" required placeholder="SN12345">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-fingerprint text-gray-400"></i>
                            </div>
                        </div>
                    `;
                    container.appendChild(serialField);
                }
            }
            
            // Initialize template modal
            function initializeTemplateModal() {
                const createBtn = document.getElementById('create-template-btn');
                const modal = document.getElementById('create-template-modal');
                const closeBtn = document.getElementById('close-template-modal');
                const cancelBtn = document.getElementById('cancel-template-btn');
                const saveBtn = document.getElementById('save-template-btn');
                const deleteBtn = document.getElementById('delete-template-btn');
                const addFieldBtn = document.getElementById('add-field-btn');
                const customFields = document.getElementById('custom-fields');
                const deleteModal = document.getElementById('delete-template-modal');
                const closeDeleteBtn = document.getElementById('close-delete-modal');
                const cancelDeleteBtn = document.getElementById('cancel-delete-btn');
                const confirmDeleteBtn = document.getElementById('confirm-delete-btn');
                
                // Handle edit template button clicks
                document.addEventListener('click', function(e) {
                    if (e.target.classList.contains('edit-template-btn') || e.target.closest('.edit-template-btn')) {
                        const btn = e.target.classList.contains('edit-template-btn') ? e.target : e.target.closest('.edit-template-btn');
                        const templateId = btn.getAttribute('data-template');
                        
                        // Open modal in edit mode
                        openTemplateModal('edit', templateId);
                    }
                });
                
                // Open modal
                createBtn.addEventListener('click', function() {
                    openTemplateModal('create');
                });
                
                // Open template modal function
                function openTemplateModal(mode, templateId = null) {
                    // Set modal title based on mode
                    document.getElementById('template-modal-title').textContent = mode === 'create' ? 'Create New Template' : 'Edit Template';
                    
                    // Show/hide delete button
                    deleteBtn.classList.toggle('hidden', mode === 'create');
                    
                    // Reset form
                    document.getElementById('template-form').reset();
                    document.getElementById('template-edit-id').value = '';
                    
                    // Clear custom fields (except the first one)
                    const fieldRows = customFields.querySelectorAll('.custom-field-row');
                    if (fieldRows.length > 1) {
                        for (let i = 1; i < fieldRows.length; i++) {
                            fieldRows[i].remove();
                        }
                    }
                    
                    // Reset first field row
                    const firstRow = customFields.querySelector('.custom-field-row');
                    if (firstRow) {
                        firstRow.querySelector('.field-name').value = '';
                        firstRow.querySelector('.field-type').value = 'text';
                        firstRow.querySelector('.field-icon').value = 'tag';
                        firstRow.querySelector('.field-placeholder').value = '';
                        firstRow.querySelector('.field-options').classList.add('hidden');
                        if (firstRow.querySelector('.field-options-input')) {
                            firstRow.querySelector('.field-options-input').value = '';
                        }
                    }
                    
                    // Reset icon selection
                    document.querySelectorAll('.icon-option').forEach(opt => {
                        opt.classList.remove('border-primary-500', 'active');
                        opt.querySelector('i').classList.remove('text-primary-500');
                        opt.querySelector('i').classList.add('text-gray-500');
                    });
                    document.querySelector('.icon-option[data-icon="flask"]').classList.add('border-primary-500', 'active');
                    document.querySelector('.icon-option[data-icon="flask"] i').classList.remove('text-gray-500');
                    document.querySelector('.icon-option[data-icon="flask"] i').classList.add('text-primary-500');
                    document.getElementById('template-icon').value = 'flask';
                    
                    // If editing, populate form with template data
                    if (mode === 'edit' && templateId) {
                        populateTemplateForm(templateId);
                    }
                    
                    // Show modal
                    modal.classList.remove('hidden');
                    setTimeout(() => {
                        modal.querySelector('.bg-white').classList.remove('opacity-0', 'scale-95');
                        modal.querySelector('.bg-white').classList.add('opacity-100', 'scale-100');
                    }, 10);
                }
                
                // Populate form with template data
                function populateTemplateForm(templateId) {
                    // Get template data
                    let template;
                    
                    // Check if it's a built-in template
                    if (['chemical', 'equipment', 'safety', 'electronic', 'machinery', 'design'].includes(templateId)) {
                        // Create a template object based on the built-in template
                        template = createBuiltInTemplateObject(templateId);
                    } else {
                        // Get custom template
                        const customTemplates = getCustomTemplates();
                        template = customTemplates.find(t => t.id === templateId);
                    }
                    
                    if (!template) return;
                    
                    // Set template ID for editing
                    document.getElementById('template-edit-id').value = template.id;
                    document.getElementById('delete-template-id').value = template.id;
                    
                    // Populate basic fields
                    document.getElementById('template-name').value = template.name || '';
                    document.getElementById('template-category').value = template.category || '';
                    document.getElementById('template-bg-color').value = template.bgColor || '#f0f9ff';
                    document.getElementById('template-bg-color-text').value = template.bgColor || '#f0f9ff';
                    
                    // Select icon
                    const iconElement = document.querySelector(`.icon-option[data-icon="${template.icon}"]`);
                    if (iconElement) {
                        document.querySelectorAll('.icon-option').forEach(opt => {
                            opt.classList.remove('border-primary-500', 'active');
                            opt.querySelector('i').classList.remove('text-primary-500');
                            opt.querySelector('i').classList.add('text-gray-500');
                        });
                        
                        iconElement.classList.add('border-primary-500', 'active');
                        iconElement.querySelector('i').classList.remove('text-gray-500');
                        iconElement.querySelector('i').classList.add('text-primary-500');
                        document.getElementById('template-icon').value = template.icon;
                    }
                    
                    // Populate custom fields
                    if (template.fields && template.fields.length > 0) {
                        // Clear existing fields first
                        customFields.innerHTML = '';
                        
                        // Add each field
                        template.fields.forEach((field, index) => {
                            // Add field row
                            addCustomField();
                            
                            // Get the newly added row (last child)
                            const fieldRows = customFields.querySelectorAll('.custom-field-row');
                            const fieldRow = fieldRows[fieldRows.length - 1];
                            
                            // Populate field data
                            fieldRow.querySelector('.field-name').value = field.name || '';
                            fieldRow.querySelector('.field-type').value = field.type || 'text';
                            fieldRow.querySelector('.field-icon').value = field.icon || 'tag';
                            fieldRow.querySelector('.field-placeholder').value = field.placeholder || '';
                            
                            // Handle options for select type
                            if (field.type === 'select') {
                                fieldRow.querySelector('.field-options').classList.remove('hidden');
                                if (field.options && field.options.length > 0) {
                                    fieldRow.querySelector('.field-options-input').value = field.options.join(', ');
                                }
                            }
                        });
                    }
                }
                
                // Create a template object based on built-in templates
// Create a template object based on built-in templates (continued)
function createBuiltInTemplateObject(templateId) {
    let template = {
        id: templateId,
        fields: []
    };
    
    switch (templateId) {
        case 'chemical':
            template.name = 'Chemical Product';
            template.category = 'Rust Coating Chemical';
            template.icon = 'flask';
            template.bgColor = '#f0f9ff';
            template.fields = [
                { name: 'Manufacturer', type: 'text', icon: 'industry', placeholder: 'ChemTech Industries' },
                { name: 'Chemical Type', type: 'select', icon: 'flask', options: ['Acid', 'Alkali', 'Solvent', 'Coating', 'Other'] },
                { name: 'Model Number', type: 'text', icon: 'barcode', placeholder: 'RS-5000-X' },
                { name: 'Serial Number', type: 'text', icon: 'fingerprint', placeholder: 'CT20250001' }
            ];
            break;
        case 'equipment':
            template.name = 'Equipment';
            template.category = 'Application Equipment';
            template.icon = 'tools';
            template.bgColor = '#f5f3ff';
            template.fields = [
                { name: 'Manufacturer', type: 'text', icon: 'industry', placeholder: 'SprayTech' },
                { name: 'Equipment Type', type: 'select', icon: 'tools', options: ['Manual', 'Semi-Automatic', 'Automatic', 'Robotic'] },
                { name: 'Model Number', type: 'text', icon: 'barcode', placeholder: 'SB-2000' },
                { name: 'Serial Number', type: 'text', icon: 'fingerprint', placeholder: 'ST2024789' }
            ];
            break;
        case 'safety':
            template.name = 'Safety Equipment';
            template.category = 'Safety Equipment';
            template.icon = 'hard-hat';
            template.bgColor = '#fff7ed';
            template.fields = [
                { name: 'Manufacturer', type: 'text', icon: 'industry', placeholder: 'SafetyFirst Inc.' },
                { name: 'Safety Standard', type: 'text', icon: 'shield-alt', placeholder: 'ANSI Z358.1, ISO 9001' },
                { name: 'Model Number', type: 'text', icon: 'barcode', placeholder: 'EW-100' },
                { name: 'Serial Number', type: 'text', icon: 'fingerprint', placeholder: 'SF20245582' }
            ];
            break;
        case 'electronic':
            template.name = 'Electronic Device';
            template.category = 'Electronic Device';
            template.icon = 'microchip';
            template.bgColor = '#f0fdf4';
            template.fields = [
                { name: 'Manufacturer', type: 'text', icon: 'industry', placeholder: 'ElectroTech Inc.' },
                { name: 'Power Requirement', type: 'text', icon: 'bolt', placeholder: '220V, 50Hz, 100W' },
                { name: 'Model Number', type: 'text', icon: 'barcode', placeholder: 'DCS-X500' },
                { name: 'Serial Number', type: 'text', icon: 'fingerprint', placeholder: 'ET2025001' }
            ];
            break;
        case 'machinery':
            template.name = 'Industrial Machinery';
            template.category = 'Industrial Machinery';
            template.icon = 'cogs';
            template.bgColor = '#fef3c7';
            template.fields = [
                { name: 'Manufacturer', type: 'text', icon: 'industry', placeholder: 'MachTech Heavy Industries' },
                { name: 'Operating Capacity', type: 'text', icon: 'tachometer-alt', placeholder: '500 kg/hour' },
                { name: 'Model Number', type: 'text', icon: 'barcode', placeholder: 'CBS-400' },
                { name: 'Serial Number', type: 'text', icon: 'fingerprint', placeholder: 'MT2024105' }
            ];
            break;
        case 'design':
            template.name = 'Design Template';
            template.category = 'Design Asset';
            template.icon = 'paint-brush';
            template.bgColor = '#fdf2f8';
            template.fields = [
                { name: 'Creator/Studio', type: 'text', icon: 'user-tie', placeholder: 'DesignWorks Studio' },
                { name: 'Design Type', type: 'select', icon: 'paint-brush', options: ['Graphic', 'Product', 'Template', 'Prototype', 'Other'] },
                { name: 'Asset ID', type: 'text', icon: 'barcode', placeholder: 'CIP-2025' },
                { name: 'Version/Revision', type: 'text', icon: 'code-branch', placeholder: 'v1.2' }
            ];
            break;
    }
    
    return template;
}

// Close modal functions
function closeModal() {
    modal.querySelector('.bg-white').classList.remove('opacity-100', 'scale-100');
    modal.querySelector('.bg-white').classList.add('opacity-0', 'scale-95');
    setTimeout(() => {
        modal.classList.add('hidden');
    }, 300);
}

closeBtn.addEventListener('click', closeModal);
cancelBtn.addEventListener('click', closeModal);

// Close delete modal
function closeDeleteModal() {
    deleteModal.querySelector('.bg-white').classList.remove('opacity-100', 'scale-100');
    deleteModal.querySelector('.bg-white').classList.add('opacity-0', 'scale-95');
    setTimeout(() => {
        deleteModal.classList.add('hidden');
    }, 300);
}

closeDeleteBtn.addEventListener('click', closeDeleteModal);
cancelDeleteBtn.addEventListener('click', closeDeleteModal);

// Icon selection
const iconOptions = document.querySelectorAll('.icon-option');
iconOptions.forEach(option => {
    option.addEventListener('click', function() {
        // Remove active class from all options
        iconOptions.forEach(opt => {
            opt.classList.remove('border-primary-500', 'active');
            opt.querySelector('i').classList.remove('text-primary-500');
            opt.querySelector('i').classList.add('text-gray-500');
        });
        
        // Add active class to this option
        this.classList.add('border-primary-500', 'active');
        this.querySelector('i').classList.remove('text-gray-500');
        this.querySelector('i').classList.add('text-primary-500');
        
        // Update hidden input
        document.getElementById('template-icon').value = this.getAttribute('data-icon');
    });
});

// Connect color inputs
const templateBgColor = document.getElementById('template-bg-color');
const templateBgColorText = document.getElementById('template-bg-color-text');

templateBgColor.addEventListener('input', function() {
    templateBgColorText.value = this.value;
});

templateBgColorText.addEventListener('input', function() {
    templateBgColor.value = this.value;
});

// Add new field
addFieldBtn.addEventListener('click', function() {
    addCustomField();
});

// Remove field
customFields.addEventListener('click', function(e) {
    if (e.target.classList.contains('remove-field-btn') || e.target.closest('.remove-field-btn')) {
        const btn = e.target.classList.contains('remove-field-btn') ? e.target : e.target.closest('.remove-field-btn');
        const fieldRow = btn.closest('.custom-field-row');
        
        // Don't remove if it's the last field
        if (customFields.querySelectorAll('.custom-field-row').length > 1) {
            fieldRow.remove();
        } else {
            showNotification('You must have at least one custom field', 'error');
        }
    }
});

// Field type change
customFields.addEventListener('change', function(e) {
    if (e.target.classList.contains('field-type')) {
        const fieldType = e.target.value;
        const fieldRow = e.target.closest('.custom-field-row');
        const optionsDiv = fieldRow.querySelector('.field-options');
        
        if (fieldType === 'select') {
            optionsDiv.classList.remove('hidden');
        } else {
            optionsDiv.classList.add('hidden');
        }
    }
});

// Delete template button
deleteBtn.addEventListener('click', function() {
    const templateId = document.getElementById('template-edit-id').value;
    const templateName = document.getElementById('template-name').value;
    
    if (!templateId) return;
    
    // Confirm deletion
    document.getElementById('delete-template-name').textContent = templateName;
    document.getElementById('delete-template-id').value = templateId;
    
    // Hide template modal
    closeModal();
    
    // Show delete confirmation modal
    deleteModal.classList.remove('hidden');
    setTimeout(() => {
        deleteModal.querySelector('.bg-white').classList.remove('opacity-0', 'scale-95');
        deleteModal.querySelector('.bg-white').classList.add('opacity-100', 'scale-100');
    }, 10);
});

// Confirm template deletion
confirmDeleteBtn.addEventListener('click', function() {
    const templateId = document.getElementById('delete-template-id').value;
    
    if (!templateId) return;
    
    // Check if it's a built-in template
    if (['chemical', 'equipment', 'safety', 'electronic', 'machinery', 'design'].includes(templateId)) {
        showNotification('Built-in templates cannot be deleted', 'error');
        closeDeleteModal();
        return;
    }
    
    // Get custom templates
    const customTemplates = getCustomTemplates();
    
    // Find the template index
    const templateIndex = customTemplates.findIndex(t => t.id === templateId);
    
    if (templateIndex === -1) {
        closeDeleteModal();
        return;
    }
    
    // Get template name for notification
    const templateName = customTemplates[templateIndex].name;
    
    // Remove template
    customTemplates.splice(templateIndex, 1);
    
    // Save templates
    localStorage.setItem('customTemplates', JSON.stringify(customTemplates));
    
    // Remove template card
    const templateCard = document.querySelector(`.template-card[data-template="${templateId}"]`);
    if (templateCard) {
        templateCard.remove();
    }
    
    // Close modal
    closeDeleteModal();
    
    // Show success notification
    showNotification(`Template "${templateName}" deleted successfully`, 'success');
});

// Save template
saveBtn.addEventListener('click', function() {
    saveCustomTemplate();
});

// Add a new custom field row
function addCustomField() {
    const customFields = document.getElementById('custom-fields');
    const newField = document.createElement('div');
    newField.className = 'custom-field-row flex items-start gap-2';
    newField.innerHTML = `
        <div class="flex-grow">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                <div class="form-group">
                    <label class="form-label text-sm">Field Name <span class="text-red-500">*</span></label>
                    <input type="text" class="form-input py-2 text-sm field-name" placeholder="E.g., Lab ID" required>
                </div>
                <div class="form-group">
                    <label class="form-label text-sm">Field Type <span class="text-red-500">*</span></label>
                    <select class="form-input py-2 text-sm field-type">
                        <option value="text">Text</option>
                        <option value="select">Dropdown</option>
                        <option value="number">Number</option>
                        <option value="date">Date</option>
                        <option value="textarea">Text Area</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label text-sm">Icon</label>
                    <select class="form-input py-2 text-sm field-icon">
                        <option value="tag">Tag</option>
                        <option value="info-circle">Info</option>
                        <option value="check-circle">Check</option>
                        <option value="flag">Flag</option>
                        <option value="clipboard">Clipboard</option>
                        <option value="calendar">Calendar</option>
                        <option value="user">User</option>
                        <option value="link">Link</option>
                    </select>
                </div>
            </div>
            <div class="field-options hidden mt-2">
                <label class="form-label text-sm">Options (comma separated)</label>
                <input type="text" class="form-input py-2 text-sm field-options-input" placeholder="Option 1, Option 2, Option 3">
            </div>
            <div class="form-group mt-2">
                <label class="form-label text-sm">Placeholder</label>
                <input type="text" class="form-input py-2 text-sm field-placeholder" placeholder="Enter placeholder text">
            </div>
        </div>
        <div class="flex-shrink-0 mt-6">
            <button type="button" class="p-2 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-full remove-field-btn">
                <i class="fas fa-trash"></i>
            </button>
        </div>
    `;
    
    customFields.appendChild(newField);
}

// Save custom template
function saveCustomTemplate() {
    const form = document.getElementById('template-form');
    const customFields = document.querySelectorAll('.custom-field-row');
    const isEditing = document.getElementById('template-edit-id').value !== '';
    
    // Validate required fields
    let isValid = true;
    const requiredInputs = form.querySelectorAll('[required]');
    requiredInputs.forEach(input => {
        if (!input.value.trim()) {
            input.classList.add('border-red-500');
            isValid = false;
        } else {
            input.classList.remove('border-red-500');
        }
    });
    
    if (!isValid) {
        showNotification('Please fill in all required fields', 'error');
        return;
    }
    
    // Collect template data
    const templateName = document.getElementById('template-name').value;
    const templateCategory = document.getElementById('template-category').value;
    const templateIcon = document.getElementById('template-icon').value;
    const templateBgColor = document.getElementById('template-bg-color').value;
    
    // Generate template ID (or use existing if editing)
    const templateId = isEditing ? 
        document.getElementById('template-edit-id').value : 
        templateName.toLowerCase().replace(/\s+/g, '-');
    
    // Check if attempting to override built-in template
    if (['chemical', 'equipment', 'safety', 'electronic', 'machinery', 'design'].includes(templateId) && !isEditing) {
        showNotification('Cannot create template with same name as built-in template', 'error');
        return;
    }
    
    // Collect fields data
    const fields = [];
    customFields.forEach(field => {
        const fieldName = field.querySelector('.field-name').value;
        const fieldType = field.querySelector('.field-type').value;
        const fieldIcon = field.querySelector('.field-icon').value;
        const fieldPlaceholder = field.querySelector('.field-placeholder').value;
        
        let options = null;
        if (fieldType === 'select') {
            const optionsInput = field.querySelector('.field-options-input');
            if (optionsInput && optionsInput.value) {
                options = optionsInput.value.split(',').map(opt => opt.trim());
            }
        }
        
        fields.push({
            name: fieldName,
            type: fieldType,
            icon: fieldIcon,
            placeholder: fieldPlaceholder,
            options: options
        });
    });
    
    // Create the template object
    const template = {
        id: templateId,
        name: templateName,
        category: templateCategory,
        icon: templateIcon,
        bgColor: templateBgColor,
        fields: fields
    };
    
    // Get existing templates
    const customTemplates = getCustomTemplates();
    
    // Check if template with this ID already exists
    const existingIndex = customTemplates.findIndex(t => t.id === template.id);
    if (existingIndex >= 0) {
        // Update existing template
        customTemplates[existingIndex] = template;
    } else {
        // Add new template
        customTemplates.push(template);
    }
    
    // Save templates
    localStorage.setItem('customTemplates', JSON.stringify(customTemplates));
    
    // Create/update template card
    addTemplateCard(template);
    
    // Close modal
    closeModal();
    
    // Show success notification
    showNotification(`Template "${templateName}" ${isEditing ? 'updated' : 'saved'} successfully`, 'success');
}

// Get custom templates from localStorage
function getCustomTemplates() {
    const templatesJson = localStorage.getItem('customTemplates');
    if (templatesJson) {
        return JSON.parse(templatesJson);
    }
    return [];
}

// Add template card to the gallery
function addTemplateCard(template) {
    const templateContainer = document.getElementById('template-container');
    
    // Check if this template card already exists
    const existingCard = document.querySelector(`.template-card[data-template="${template.id}"]`);
    if (existingCard) {
        // Update the existing card
        existingCard.querySelector('.template-icon').className = `fas fa-${template.icon} text-primary-500 text-xl template-icon`;
        existingCard.querySelector('p').textContent = template.name;
        return;
    }
    
    // Create new template card
    const card = document.createElement('div');
    card.className = 'template-card cursor-pointer border rounded-lg p-2 hover:border-primary-500 transition-all relative group';
    card.setAttribute('data-template', template.id);
    
    card.innerHTML = `
        <div class="absolute top-1 right-1 flex template-actions opacity-0 group-hover:opacity-100">
            <button type="button" class="edit-template-btn p-1 text-gray-500 hover:text-primary-600" data-template="${template.id}">
                <i class="fas fa-edit"></i>
            </button>
        </div>
        <div class="aspect-w-16 aspect-h-10 rounded mb-2 p-2 flex items-center justify-center" style="background-color: ${template.bgColor}">
            <i class="fas fa-${template.icon} text-primary-500 text-xl template-icon"></i>
        </div>
        <p class="text-xs text-center">${template.name}</p>
    `;
    
    // Add event listener
    card.addEventListener('click', function(e) {
        // Don't trigger template application if clicking on edit button
        if (e.target.closest('.edit-template-btn')) return;
        
        applyCustomTemplate(template);
    });
    
    // Add to template container
    templateContainer.appendChild(card);
    
    // Add to category dropdown
    const categorySelect = document.getElementById('category-select');
    const optionExists = Array.from(categorySelect.options).some(opt => opt.value === template.category);
    
    if (!optionExists) {
        const option = document.createElement('option');
        option.value = template.category;
        option.textContent = template.category;
        categorySelect.appendChild(option);
    }
}});
        </script>
}